<!--THIS IS AN AUTOGENERATED FILE. DO NOT EDIT!-->


<!--abstract--><section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.abstract">
   <name>
      <tt>&lt;abstract&gt;</tt>
   </name>
   <x:anchor-alias value="abstract"/>
   <iref item="Elements" subitem="abstract" primary="true"/>
   <iref item="abstract element" primary="true"/>
   <t>
     Contains the Abstract of the document.
     See <xref target="RFC7322"/> for more information on restrictions for the Abstract.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>front</x:ref>&gt; (<xref target="element.front"/>).</t>
   <t anchor="element.abstract.contents"><!--AG-->
      <xref format="none" target="grammar.abstract">Content model</xref>:
    </t>
   <t><!--AG-->In any order, but at least one of:</t>
   <ul><!--AG-->
      <li><!--AG-->
         <iref item="Elements" subitem="dl"/>
         <iref item="dl element" subitem="inside abstract"/>&lt;<x:ref>dl</x:ref>&gt; elements (<xref target="element.dl"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="ol"/>
         <iref item="ol element" subitem="inside abstract"/>&lt;<x:ref>ol</x:ref>&gt; elements (<xref target="element.ol"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="t"/>
         <iref item="t element" subitem="inside abstract"/>&lt;<x:ref>t</x:ref>&gt; elements (<xref target="element.t"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="ul"/>
         <iref item="ul element" subitem="inside abstract"/>&lt;<x:ref>ul</x:ref>&gt; elements (<xref target="element.ul"/>)</li>
   </ul>

   <!--abstract/@anchor-->
   <section anchor="element.abstract.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="abstract element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in abstract element"/>
      <t>
        Document-wide unique identifier for the Abstract.
      </t>
   </section>
</section>

<!--address-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.address">
   <name>
      <tt>&lt;address&gt;</tt>
   </name>
   <x:anchor-alias value="address"/>
   <iref item="Elements" subitem="address" primary="true"/>
   <iref item="address element" primary="true"/>
   <t>
     Provides address information for the author.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>author</x:ref>&gt; (<xref target="element.author"/>).</t>
   <t anchor="element.address.contents"><!--AG-->
      <xref format="none" target="grammar.address">Content model</xref>:</t>
   <t><!--AG-->In this order:</t>
   <ol><!--AG-->
        
      <li><!--AG-->
         <iref item="Elements" subitem="postal"/>
         <iref item="postal element" subitem="inside address"/>One optional &lt;<x:ref>postal</x:ref>&gt; element (<xref target="element.postal"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="phone"/>
         <iref item="phone element" subitem="inside address"/>One optional &lt;<x:ref>phone</x:ref>&gt; element (<xref target="element.phone"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="facsimile"/>
         <iref item="facsimile element" subitem="inside address"/>One optional &lt;<x:ref>facsimile</x:ref>&gt; element (<xref target="element.facsimile"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="email"/>
         <iref item="email element" subitem="inside address"/>One optional &lt;<x:ref>email</x:ref>&gt; element (<xref target="element.email"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="uri"/>
         <iref item="uri element" subitem="inside address"/>One optional &lt;<x:ref>uri</x:ref>&gt; element (<xref target="element.uri"/>)</li>
      
   </ol>
</section>

<!--annotation-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.annotation">
   <name>
      <tt>&lt;annotation&gt;</tt>
   </name>
   <x:anchor-alias value="annotation"/>
   <iref item="Elements" subitem="annotation" primary="true"/>
   <iref item="annotation element" primary="true"/>
   <t>
      Provides additional prose augmenting a bibliographic reference.
      This text is intended to be shown after the rest of the generated reference text.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>reference</x:ref>&gt; (<xref target="element.reference"/>).</t>
   <t anchor="element.annotation.contents"><!--AG-->
      <xref format="none" target="grammar.annotation">Content model</xref>:
    </t>
   <t><!--AG-->In any order:</t>
   <ul><!--AG-->
      <li><!--AG-->Text</li>
      <li><!--AG-->
         <iref item="Elements" subitem="bcp14"/>
         <iref item="bcp14 element" subitem="inside annotation"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="cref"/>
         <iref item="cref element" subitem="inside annotation"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="em"/>
         <iref item="em element" subitem="inside annotation"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="eref"/>
         <iref item="eref element" subitem="inside annotation"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="iref"/>
         <iref item="iref element" subitem="inside annotation"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="relref"/>
         <iref item="relref element" subitem="inside annotation"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="spanx"/>
         <iref item="spanx element" subitem="inside annotation"/>&lt;<x:ref>spanx</x:ref>&gt; elements (<xref target="element.spanx"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="strong"/>
         <iref item="strong element" subitem="inside annotation"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sub"/>
         <iref item="sub element" subitem="inside annotation"/>&lt;<x:ref>sub</x:ref>&gt; elements (<xref target="element.sub"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sup"/>
         <iref item="sup element" subitem="inside annotation"/>&lt;<x:ref>sup</x:ref>&gt; elements (<xref target="element.sup"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="tt"/>
         <iref item="tt element" subitem="inside annotation"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="xref"/>
         <iref item="xref element" subitem="inside annotation"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
   </ul>
</section>

<!--area-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.area">
   <name>
      <tt>&lt;area&gt;</tt>
   </name>
   <x:anchor-alias value="area"/>
   <iref item="Elements" subitem="area" primary="true"/>
   <iref item="area element" primary="true"/>
   <t>
      Provides information about the IETF area to which this document relates
      (currently not used when generating documents).
   </t>
   <t>
      The value ought to be either the full name or the abbreviation of one of
      the IETF areas as listed on <eref target="http://www.ietf.org/iesg/area.html"/>.
      A list of full names and abbreviations will be kept by the RFC Series Editor.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>front</x:ref>&gt; (<xref target="element.front"/>).</t>
   <t anchor="element.area.contents"><!--AG-->
      <xref format="none" target="grammar.area">Content model</xref>: only text content.</t>
</section>

<!--artwork-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.artwork">
   <name>
      <tt>&lt;artwork&gt;</tt>
   </name>
   <x:anchor-alias value="artwork"/>
   <iref item="Elements" subitem="artwork" primary="true"/>
   <iref item="artwork element" primary="true"/>
   <t>
      This element allows the inclusion of "artwork" in the document.
      &lt;artwork&gt; provides
      full control of horizontal whitespace and line breaks; thus, it is
      used for a variety of things, such as diagrams ("line art") and protocol unit diagrams.
      Tab characters (U+0009) inside of this element are prohibited.
   </t>
   <t>
      Alternatively, the "src" attribute allows referencing an external graphics
      file, such as a vector drawing in SVG or a bitmap graphic file, using a URI. In this case, the textual
      content acts as a fallback for output representations that do not support graphics;
      thus, it ought to contain either (1) a "line art" variant of the graphics or (2)
      prose that describes the included image in sufficient detail.
   </t>
   <t>
      In <xref target="RFC7749"/>, the &lt;artwork&gt; element was also used for source code and formal
      languages; in v3, this is now done with &lt;<x:ref>sourcecode</x:ref>&gt;.
   </t>
   <t>
      There are at least five ways to include SVG in artwork in Internet-Drafts:
      <list style="symbols">
         <t>Inline, by including all of the SVG in the content of the element, 
            such as: &lt;artwork type="svg"&gt;&lt;svg xmlns="http://www.w3.org/2000/svg..."&gt;</t>
         <t>Inline, but using XInclude (see <xref target="includingexternal"/>),
            such as: &lt;artwork type="svg"&gt;&lt;xi:include href=...&gt;</t>
         <t>As a data: URI, such as: &lt;artwork type="svg"
            src="data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3..."&gt;</t>
         <t>As a URI to an external entity, such as: &lt;artwork type="svg" src="http://www.example.com/..."&gt;</t>
         <t>As a local file, such as: &lt;artwork type="svg" src="diagram12.svg"&gt;</t>
      </list>
      The use of SVG in Internet-Drafts and RFCs is covered in much more detail in
      <xref target="RFC7996"/>.
   </t>
   <t>
      The above methods for inclusion of SVG art can also be used for including text artwork, but using a data: URI is probably
      confusing for text artwork.
   </t>
   <t>
      Formatters that do pagination should attempt to keep artwork on a single page. This is to prevent
      artwork that is split across pages from looking like two separate pieces of artwork.
   </t>
   <t>
See <xref target="cdata.and.escaping"/> for a description of how to deal with issues of using
"&amp;" and "&lt;" characters in artwork.
</t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>aside</x:ref>&gt; (<xref target="element.aside"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>figure</x:ref>&gt; (<xref target="element.figure"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>section</x:ref>&gt; (<xref target="element.section"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), and &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>).</t>
   <t anchor="element.artwork.contents"><!--AG-->
      <xref format="none" target="grammar.artwork">Content model</xref>:
    </t>
   <t><!--AG-->Either:</t>
   <ul empty="true"><!--AG-->
          
      <li><!--AG-->Text</li>
        
   </ul>
   <t><!--AG-->Or:</t>
   <ul empty="true"><!--AG-->
      <li><!--AG-->
         <iref item="Elements" subitem="svg"/>
         <iref item="svg element" subitem="inside artwork"/>&lt;<x:ref>svg</x:ref>&gt; elements (<xref target="element.svg"/>)</li>
   </ul>

   <!--artwork/@align-->
   <section anchor="element.artwork.attribute.align" toc="exclude">
      <name>"align" Attribute</name>
      <iref item="Attributes" subitem="align"/>
      <iref item="artwork element" subitem="align attribute"/>
      <iref item="align attribute" subitem="in artwork element"/>
      <t>
            Controls whether the artwork appears left justified (default), centered,
            or right justified.
            Artwork is aligned relative to the left margin of the document.
         </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"left" (default)</li>
         <li>"center"</li>
         <li>"right"</li>
      </ul>
   </section>

   <!--artwork/@alt-->
   <section anchor="element.artwork.attribute.alt" toc="exclude">
      <name>"alt" Attribute</name>
      <iref item="Attributes" subitem="alt"/>
      <iref item="artwork element" subitem="alt attribute"/>
      <iref item="alt attribute" subitem="in artwork element"/>
      <t>
            Alternative text description of the artwork (which is more than just a summary or caption).
            When the art comes from the "src" attribute
            and the format of that artwork supports alternate text,
            the alternative text comes from the text of the artwork itself, not from this attribute.
            The contents of this attribute are important to readers who are visually impaired, as well as
            those reading on devices that cannot show the artwork well, or at all.
         </t>
   </section>

   <!--artwork/@anchor-->
   <section anchor="element.artwork.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="artwork element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in artwork element"/>
      <t>
        Document-wide unique identifier for this artwork.
      </t>
   </section>

   <!--artwork/@height-->
   <section anchor="element.artwork.attribute.height" toc="exclude">
      <name>"height" Attribute</name>
      <iref item="Attributes" subitem="height"/>
      <iref item="artwork element" subitem="height attribute"/>
      <iref item="height attribute" subitem="in artwork element"/>
      <t>
            Deprecated.
      </t>
   </section>

   <!--artwork/@name-->
   <section anchor="element.artwork.attribute.name" toc="exclude">
      <name>"name" Attribute</name>
      <iref item="Attributes" subitem="name"/>
      <iref item="artwork element" subitem="name attribute"/>
      <iref item="name attribute" subitem="in artwork element"/>
      <t>
            A filename suitable for the contents (such as for extraction to a local file).
            This attribute can
            be helpful for other kinds of tools (such as automated syntax checkers,
            which work by extracting the artwork).
            Note that the "name" attribute does not need to be unique for  &lt;<x:ref>artwork</x:ref>&gt; elements in a
            document. If multiple  &lt;<x:ref>artwork</x:ref>&gt; elements have the same "name" attribute, a processing tool might
            assume that the elements are all fragments of a single file, and the tool can
            collect those fragments for later processing.
            See <xref target="security.considerations"/> for a discussion of possible problems with the value of this attribute.
         </t>
   </section>

   <!--artwork/@src-->
   <section anchor="element.artwork.attribute.src" toc="exclude">
      <name>"src" Attribute</name>
      <iref item="Attributes" subitem="src"/>
      <iref item="artwork element" subitem="src attribute"/>
      <iref item="src attribute" subitem="in artwork element"/>
      <t>
         The URI reference of a graphics file <xref target="RFC3986"/>, or the name of a file on the local disk.
         This can be a "data" URI <xref target="RFC2397"/> that contains the contents of the graphics file.
         Note that the inclusion of art with the "src" attribute depends on the capabilities of the processing tool
         reading the XML document. Tools need to be able to handle the file: URI, and they should
         be able to handle http: and https: URIs as well. The prep tool will be able to handle reading the "src" attribute.
      </t>
      <t>
         If no URI scheme is given in the attribute, the attribute is considered to be a local filename
         relative to the current directory.
         Processing tools must be careful to not accept dangerous values for the filename, particularly those that contain
         absolute references outside the current directory.
         Document creators should think hard before using relative URIs due to possible later problems if files move
         around on the disk. Also, documents should most likely use explicit URI schemes wherever possible.
      </t>
      <t>
         In some cases, the prep tool may remove the "src" attribute after processing its value.
         See <xref target="RFC7998"/> for a description of this.
      </t>
      <t>
         It is an error to have both a "src" attribute and content in the &lt;artwork&gt; element.
      </t>
   </section>

   <!--artwork/@type-->
   <section anchor="element.artwork.attribute.type" toc="exclude">
      <name>"type" Attribute</name>
      <iref item="Attributes" subitem="type"/>
      <iref item="artwork element" subitem="type attribute"/>
      <iref item="type attribute" subitem="in artwork element"/>
      <t>
            Specifies the type of the artwork. The value of this attribute is free text with
            certain values designated as preferred.
      </t>
      <t>
            The preferred values for &lt;artwork&gt; types are:
            <list style="symbols">
            <t>ascii-art</t>
            <t>binary-art</t>
            <t>call-flow</t>
            <t>hex-dump</t>
            <t>svg</t>
         </list>
            The RFC Series Editor will maintain a complete list of the preferred values on the RFC Editor
            web site, and that list is expected to be updated over time. Thus, a consumer
            of v3 XML should not cause a failure when it encounters an unexpected type or no type is specified.
            The table will also indicate which type of art can appear in plain-text output (for example, type="svg" cannot).
         </t>
   </section>

   <!--artwork/@width-->
   <section anchor="element.artwork.attribute.width" toc="exclude">
      <name>"width" Attribute</name>
      <iref item="Attributes" subitem="width"/>
      <iref item="artwork element" subitem="width attribute"/>
      <iref item="width attribute" subitem="in artwork element"/>
      <t>
            Deprecated.
      </t>
   </section>

   <!--artwork/@xml:space-->
   <section anchor="element.artwork.attribute.xml-space" toc="exclude">
      <name>"xml:space" Attribute</name>
      <iref item="Attributes" subitem="xml:space"/>
      <iref item="artwork element" subitem="xml:space attribute"/>
      <iref item="xml:space attribute" subitem="in artwork element"/>
      <t>
            Deprecated.
       </t>
   </section>
</section>

<!--aside-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.aside">
   <name>
      <tt>&lt;aside&gt;</tt>
   </name>
   <x:anchor-alias value="aside"/>
   <iref item="Elements" subitem="aside" primary="true"/>
   <iref item="aside element" primary="true"/>
   <t>
      This element is a container for content that is semantically less important or tangential
      to the content that surrounds it.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>section</x:ref>&gt; (<xref target="element.section"/>).</t>
   <t anchor="element.aside.contents"><!--AG-->
      <xref format="none" target="grammar.aside">Content model</xref>:
    </t>
   <t><!--AG-->In any order:</t>
   <ul><!--AG-->
      <li><!--AG-->
         <iref item="Elements" subitem="artwork"/>
         <iref item="artwork element" subitem="inside aside"/>&lt;<x:ref>artwork</x:ref>&gt; elements (<xref target="element.artwork"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="dl"/>
         <iref item="dl element" subitem="inside aside"/>&lt;<x:ref>dl</x:ref>&gt; elements (<xref target="element.dl"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="figure"/>
         <iref item="figure element" subitem="inside aside"/>&lt;<x:ref>figure</x:ref>&gt; elements (<xref target="element.figure"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="iref"/>
         <iref item="iref element" subitem="inside aside"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="list"/>
         <iref item="list element" subitem="inside aside"/>&lt;<x:ref>list</x:ref>&gt; elements (<xref target="element.list"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="ol"/>
         <iref item="ol element" subitem="inside aside"/>&lt;<x:ref>ol</x:ref>&gt; elements (<xref target="element.ol"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="t"/>
         <iref item="t element" subitem="inside aside"/>&lt;<x:ref>t</x:ref>&gt; elements (<xref target="element.t"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="table"/>
         <iref item="table element" subitem="inside aside"/>&lt;<x:ref>table</x:ref>&gt; elements (<xref target="element.table"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="ul"/>
         <iref item="ul element" subitem="inside aside"/>&lt;<x:ref>ul</x:ref>&gt; elements (<xref target="element.ul"/>)</li>
   </ul>

   <!--aside/@anchor-->
   <section anchor="element.aside.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="aside element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in aside element"/>
      <t>
        Document-wide unique identifier for this aside.
      </t>
   </section>
</section>

<!--author-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.author">
   <name>
      <tt>&lt;author&gt;</tt>
   </name>
   <x:anchor-alias value="author"/>
   <iref item="Elements" subitem="author" primary="true"/>
   <iref item="author element" primary="true"/>
   <t>
      Provides information about a document's author. This is used both for
      the document itself (at the beginning of the document) and for
      referenced documents.
   </t>
   <t>
      The &lt;author&gt; elements contained within the document's &lt;front&gt; element
      are used to fill the boilerplate and also to generate the "Author's Address"
      section (see <xref target="RFC7322"/>).
   </t>
   <t>
      Note that an "author" can also be just an organization (by not specifying any
      of the "name" attributes, but adding the &lt;<x:ref>organization</x:ref>&gt;
      child element).
   </t>
   <t>
      Furthermore, the "role" attribute can be used to mark an author as
      "editor". This is reflected both on the front page and in the "Author's Address" section, as well as in bibliographic
      references. Note that this specification does not define a precise
      meaning for the term "editor".
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>front</x:ref>&gt; (<xref target="element.front"/>).</t>
   <t anchor="element.author.contents"><!--AG-->
      <xref format="none" target="grammar.author">Content model</xref>:</t>
   <t><!--AG-->In this order:</t>
   <ol><!--AG-->
        
      <li><!--AG-->
         <iref item="Elements" subitem="organization"/>
         <iref item="organization element" subitem="inside author"/>One optional &lt;<x:ref>organization</x:ref>&gt; element (<xref target="element.organization"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="address"/>
         <iref item="address element" subitem="inside author"/>One optional &lt;<x:ref>address</x:ref>&gt; element (<xref target="element.address"/>)</li>
      
   </ol>

   <!--author/@asciiFullname-->
   <section anchor="element.author.attribute.asciiFullname" toc="exclude">
      <name>"asciiFullname" Attribute</name>
      <iref item="Attributes" subitem="asciiFullname"/>
      <iref item="author element" subitem="asciiFullname attribute"/>
      <iref item="asciiFullname attribute" subitem="in author element"/>
      <t>
         The ASCII equivalent of the author's full name.
      </t>
   </section>

   <!--author/@asciiInitials-->
   <section anchor="element.author.attribute.asciiInitials" toc="exclude">
      <name>"asciiInitials" Attribute</name>
      <iref item="Attributes" subitem="asciiInitials"/>
      <iref item="author element" subitem="asciiInitials attribute"/>
      <iref item="asciiInitials attribute" subitem="in author element"/>
      <t>
         The ASCII equivalent of the author's initials, to be used in conjunction with the separately specified asciiSurname.
      </t>
   </section>

   <!--author/@asciiSurname-->
   <section anchor="element.author.attribute.asciiSurname" toc="exclude">
      <name>"asciiSurname" Attribute</name>
      <iref item="Attributes" subitem="asciiSurname"/>
      <iref item="author element" subitem="asciiSurname attribute"/>
      <iref item="asciiSurname attribute" subitem="in author element"/>
      <t>
         The ASCII equivalent of the author's surname, to be used in conjunction with the separately specified asciiInitials.
      </t>
   </section>

   <!--author/@fullname-->
   <section anchor="element.author.attribute.fullname" toc="exclude">
      <name>"fullname" Attribute</name>
      <iref item="Attributes" subitem="fullname"/>
      <iref item="author element" subitem="fullname attribute"/>
      <iref item="fullname attribute" subitem="in author element"/>
      <t>
            The full name (used in the automatically generated "Author's Address" section).
            Although this attribute is optional, if one or more of the "asciiFullname", "asciiInitials",
            or "asciiSurname" attributes have values, the "fullname" attribute is required.
      </t>
   </section>

   <!--author/@initials-->
   <section anchor="element.author.attribute.initials" toc="exclude">
      <name>"initials" Attribute</name>
      <iref item="Attributes" subitem="initials"/>
      <iref item="author element" subitem="initials attribute"/>
      <iref item="initials attribute" subitem="in author element"/>
      <t>
         An abbreviated variant of the given name(s), to be used in conjunction
         with the separately specified surname.  It usually appears on the front
         page, in footers, and in references.
      </t>
      <t>
         Some processors will post-process the value -- for instance, when it only
         contains a single letter (in which case they might add a trailing dot).
         Relying on this kind of post-processing can lead to results varying
         across formatters and thus ought to be avoided.
      </t>
   </section>

   <!--author/@role-->
   <section anchor="element.author.attribute.role" toc="exclude">
      <name>"role" Attribute</name>
      <iref item="Attributes" subitem="role"/>
      <iref item="author element" subitem="role attribute"/>
      <iref item="role attribute" subitem="in author element"/>
      <t>
            Specifies the role the author had in creating the document.
         </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"editor"</li>
      </ul>
   </section>

   <!--author/@surname-->
   <section anchor="element.author.attribute.surname" toc="exclude">
      <name>"surname" Attribute</name>
      <iref item="Attributes" subitem="surname"/>
      <iref item="author element" subitem="surname attribute"/>
      <iref item="surname attribute" subitem="in author element"/>
      <t>
         The author's surname, to be used in conjunction with the separately
         specified initials.  It usually appears on the front page, in
         footers, and in references.
      </t>
   </section>
</section>

<!--back-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.back">
   <name>
      <tt>&lt;back&gt;</tt>
   </name>
   <x:anchor-alias value="back"/>
   <iref item="Elements" subitem="back" primary="true"/>
   <iref item="back element" primary="true"/>
   <t>
      Contains the "back" part of the document: the references and appendices. In &lt;back&gt;,
      &lt;<x:ref>section</x:ref>&gt; elements indicate appendices.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>rfc</x:ref>&gt; (<xref target="element.rfc"/>).</t>
   <t anchor="element.back.contents"><!--AG-->
      <xref format="none" target="grammar.back">Content model</xref>:</t>
   <t><!--AG-->In this order:</t>
   <ol><!--AG-->
        
      <li><!--AG-->
         <iref item="Elements" subitem="displayreference"/>
         <iref item="displayreference element" subitem="inside back"/>Optional &lt;<x:ref>displayreference</x:ref>&gt; elements (<xref target="element.displayreference"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="references"/>
         <iref item="references element" subitem="inside back"/>Optional &lt;<x:ref>references</x:ref>&gt; elements (<xref target="element.references"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="section"/>
         <iref item="section element" subitem="inside back"/>Optional &lt;<x:ref>section</x:ref>&gt; elements (<xref target="element.section"/>)</li>
      
   </ol>
</section>

<!--bcp14-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.bcp14">
   <name>
      <tt>&lt;bcp14&gt;</tt>
   </name>
   <x:anchor-alias value="bcp14"/>
   <iref item="Elements" subitem="bcp14" primary="true"/>
   <iref item="bcp14 element" primary="true"/>
   <t>
      Marks text that are phrases defined in <xref target="BCP14"/> such as "MUST", "SHOULD NOT", and so on. When shown
      in some of the output representations, the text in this element might be highlighted.
      The use of this element is optional.
   </t>
   <t>
      This element is only to be used around the actual phrase from BCP 14, not the full
      definition of a requirement. For example, it is correct to say
      "The packet &lt;bcp14&gt;MUST&lt;/bcp14&gt; be dropped.", but it is not correct to say
      "&lt;bcp14&gt;The packet MUST be dropped.&lt;/bcp14&gt;".
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>annotation</x:ref>&gt; (<xref target="element.annotation"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>dt</x:ref>&gt; (<xref target="element.dt"/>), &lt;<x:ref>em</x:ref>&gt; (<xref target="element.em"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>preamble</x:ref>&gt; (<xref target="element.preamble"/>), &lt;<x:ref>refcontent</x:ref>&gt; (<xref target="element.refcontent"/>), &lt;<x:ref>strong</x:ref>&gt; (<xref target="element.strong"/>), &lt;<x:ref>sub</x:ref>&gt; (<xref target="element.sub"/>), &lt;<x:ref>sup</x:ref>&gt; (<xref target="element.sup"/>), &lt;<x:ref>t</x:ref>&gt; (<xref target="element.t"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>), and &lt;<x:ref>tt</x:ref>&gt; (<xref target="element.tt"/>).</t>
   <t anchor="element.bcp14.contents"><!--AG-->
      <xref format="none" target="grammar.bcp14">Content model</xref>: only text content.</t>
</section>

<!--blockquote-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.blockquote">
   <name>
      <tt>&lt;blockquote&gt;</tt>
   </name>
   <x:anchor-alias value="blockquote"/>
   <iref item="Elements" subitem="blockquote" primary="true"/>
   <iref item="blockquote element" primary="true"/>
   <t>
      Specifies that a block of text is a quotation.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>section</x:ref>&gt; (<xref target="element.section"/>).</t>
   <t anchor="element.blockquote.contents"><!--AG-->
      <xref format="none" target="grammar.blockquote">Content model</xref>:
    </t>
   <t><!--AG-->Either:</t>
   <ul empty="true"><!--AG-->
      <li><!--AG-->
         <t>In any order, but at least one of:</t>
         <ul><!--AG-->
            <li><!--AG-->
               <iref item="Elements" subitem="artwork"/>
               <iref item="artwork element" subitem="inside blockquote"/>&lt;<x:ref>artwork</x:ref>&gt; elements (<xref target="element.artwork"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="dl"/>
               <iref item="dl element" subitem="inside blockquote"/>&lt;<x:ref>dl</x:ref>&gt; elements (<xref target="element.dl"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="figure"/>
               <iref item="figure element" subitem="inside blockquote"/>&lt;<x:ref>figure</x:ref>&gt; elements (<xref target="element.figure"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ol"/>
               <iref item="ol element" subitem="inside blockquote"/>&lt;<x:ref>ol</x:ref>&gt; elements (<xref target="element.ol"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sourcecode"/>
               <iref item="sourcecode element" subitem="inside blockquote"/>&lt;<x:ref>sourcecode</x:ref>&gt; elements (<xref target="element.sourcecode"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="t"/>
               <iref item="t element" subitem="inside blockquote"/>&lt;<x:ref>t</x:ref>&gt; elements (<xref target="element.t"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ul"/>
               <iref item="ul element" subitem="inside blockquote"/>&lt;<x:ref>ul</x:ref>&gt; elements (<xref target="element.ul"/>)</li>
         </ul>
      </li>
   </ul>
   <t><!--AG-->Or:</t>
   <ul empty="true"><!--AG-->
      <li><!--AG-->
         <t>In any order, but at least one of:</t>
         <ul><!--AG-->
            <li><!--AG-->Text</li>
            <li><!--AG-->
               <iref item="Elements" subitem="bcp14"/>
               <iref item="bcp14 element" subitem="inside blockquote"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="cref"/>
               <iref item="cref element" subitem="inside blockquote"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="em"/>
               <iref item="em element" subitem="inside blockquote"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="eref"/>
               <iref item="eref element" subitem="inside blockquote"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="iref"/>
               <iref item="iref element" subitem="inside blockquote"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="relref"/>
               <iref item="relref element" subitem="inside blockquote"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="strong"/>
               <iref item="strong element" subitem="inside blockquote"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sub"/>
               <iref item="sub element" subitem="inside blockquote"/>&lt;<x:ref>sub</x:ref>&gt; elements (<xref target="element.sub"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sup"/>
               <iref item="sup element" subitem="inside blockquote"/>&lt;<x:ref>sup</x:ref>&gt; elements (<xref target="element.sup"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="tt"/>
               <iref item="tt element" subitem="inside blockquote"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="xref"/>
               <iref item="xref element" subitem="inside blockquote"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
         </ul>
      </li>
   </ul>

   <!--blockquote/@anchor-->
   <section anchor="element.blockquote.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="blockquote element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in blockquote element"/>
      <t>
         Document-wide unique identifier for this quotation.
      </t>
   </section>

   <!--blockquote/@cite-->
   <section anchor="element.blockquote.attribute.cite" toc="exclude">
      <name>"cite" Attribute</name>
      <iref item="Attributes" subitem="cite"/>
      <iref item="blockquote element" subitem="cite attribute"/>
      <iref item="cite attribute" subitem="in blockquote element"/>
      <t>
         The source of the citation. This must be a URI. If the "quotedFrom" attribute is given, this URI will be
         used by processing tools as the link for the text of that attribute.
      </t>
   </section>

   <!--blockquote/@quotedFrom-->
   <section anchor="element.blockquote.attribute.quotedFrom" toc="exclude">
      <name>"quotedFrom" Attribute</name>
      <iref item="Attributes" subitem="quotedFrom"/>
      <iref item="blockquote element" subitem="quotedFrom attribute"/>
      <iref item="quotedFrom attribute" subitem="in blockquote element"/>
      <t>
         Name of person or document the text in this element is quoted from. A formatter should render this
         as visible text at the end of the quotation.
      </t>
   </section>
</section>

<!--boilerplate-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.boilerplate">
   <name>
      <tt>&lt;boilerplate&gt;</tt>
   </name>
   <x:anchor-alias value="boilerplate"/>
   <iref item="Elements" subitem="boilerplate" primary="true"/>
   <iref item="boilerplate element" primary="true"/>
   <t>
      Holds the boilerplate text for the document. This element is filled in by the prep tool.
   </t>
   <t>
      This element contains &lt;<x:ref>section</x:ref>&gt; elements. Every &lt;<x:ref>section</x:ref>&gt;
      element in this element must have the "numbered" attribute set to "false".
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>front</x:ref>&gt; (<xref target="element.front"/>).</t>
   <t anchor="element.boilerplate.contents"><!--AG-->
      <xref format="none" target="grammar.boilerplate">Content model</xref>:
    </t>
        
   <t><!--AG-->
      <iref item="Elements" subitem="section"/>
      <iref item="section element" subitem="inside boilerplate"/>One or more &lt;<x:ref>section</x:ref>&gt; elements (<xref target="element.section"/>)</t>
      
</section>

<!--br-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.br">
   <name>
      <tt>&lt;br&gt;</tt>
   </name>
   <x:anchor-alias value="br"/>
   <iref item="Elements" subitem="br" primary="true"/>
   <iref item="br element" primary="true"/>
   <t>
      Indicates that a line break should be inserted in the generated output by a formatting tool.
      Multiple successive instances of this element are ignored.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>) and &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>).</t>
   <t anchor="element.br.contents"><!--AG-->
      <xref format="none" target="grammar.br">Content model</xref>: this element does not have any contents.</t>
</section>

<!--city-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.city">
   <name>
      <tt>&lt;city&gt;</tt>
   </name>
   <x:anchor-alias value="city"/>
   <iref item="Elements" subitem="city" primary="true"/>
   <iref item="city element" primary="true"/>
   <t>
      Gives the city name in a postal address.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>postal</x:ref>&gt; (<xref target="element.postal"/>).</t>
   <t anchor="element.city.contents"><!--AG-->
      <xref format="none" target="grammar.city">Content model</xref>: only text content.</t>

   <!--city/@ascii-->
   <section anchor="element.city.attribute.ascii" toc="exclude">
      <name>"ascii" Attribute</name>
      <iref item="Attributes" subitem="ascii"/>
      <iref item="city element" subitem="ascii attribute"/>
      <iref item="ascii attribute" subitem="in city element"/>
      <t>
         The ASCII equivalent of the city name.
      </t>
   </section>
</section>

<!--code-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.code">
   <name>
      <tt>&lt;code&gt;</tt>
   </name>
   <x:anchor-alias value="code"/>
   <iref item="Elements" subitem="code" primary="true"/>
   <iref item="code element" primary="true"/>
   <t>
      Gives the postal region code.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>postal</x:ref>&gt; (<xref target="element.postal"/>).</t>
   <t anchor="element.code.contents"><!--AG-->
      <xref format="none" target="grammar.code">Content model</xref>: only text content.</t>

   <!--code/@ascii-->
   <section anchor="element.code.attribute.ascii" toc="exclude">
      <name>"ascii" Attribute</name>
      <iref item="Attributes" subitem="ascii"/>
      <iref item="code element" subitem="ascii attribute"/>
      <iref item="ascii attribute" subitem="in code element"/>
      <t>
         The ASCII equivalent of the postal code.
      </t>
   </section>
</section>

<!--country-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.country">
   <name>
      <tt>&lt;country&gt;</tt>
   </name>
   <x:anchor-alias value="country"/>
   <iref item="Elements" subitem="country" primary="true"/>
   <iref item="country element" primary="true"/>
   <t>
      Gives the country name or code in a postal address.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>postal</x:ref>&gt; (<xref target="element.postal"/>).</t>
   <t anchor="element.country.contents"><!--AG-->
      <xref format="none" target="grammar.country">Content model</xref>: only text content.</t>

   <!--country/@ascii-->
   <section anchor="element.country.attribute.ascii" toc="exclude">
      <name>"ascii" Attribute</name>
      <iref item="Attributes" subitem="ascii"/>
      <iref item="country element" subitem="ascii attribute"/>
      <iref item="ascii attribute" subitem="in country element"/>
      <t>
         The ASCII equivalent of the country name.
      </t>
   </section>
</section>

<!--cref-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.cref">
   <name>
      <tt>&lt;cref&gt;</tt>
   </name>
   <x:anchor-alias value="cref"/>
   <iref item="Elements" subitem="cref" primary="true"/>
   <iref item="cref element" primary="true"/>
   <t>
      Represents a comment.
   </t>
   <t>
      Comments can be used in a document while it is work in progress. They
      might appear either inline and visually highlighted, at the end of the document,
      or not at all, depending on the formatting tool.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>annotation</x:ref>&gt; (<xref target="element.annotation"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>c</x:ref>&gt; (<xref target="element.c"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>dt</x:ref>&gt; (<xref target="element.dt"/>), &lt;<x:ref>em</x:ref>&gt; (<xref target="element.em"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>name</x:ref>&gt; (<xref target="element.name"/>), &lt;<x:ref>postamble</x:ref>&gt; (<xref target="element.postamble"/>), &lt;<x:ref>preamble</x:ref>&gt; (<xref target="element.preamble"/>), &lt;<x:ref>strong</x:ref>&gt; (<xref target="element.strong"/>), &lt;<x:ref>sub</x:ref>&gt; (<xref target="element.sub"/>), &lt;<x:ref>sup</x:ref>&gt; (<xref target="element.sup"/>), &lt;<x:ref>t</x:ref>&gt; (<xref target="element.t"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>), &lt;<x:ref>tt</x:ref>&gt; (<xref target="element.tt"/>), and &lt;<x:ref>ttcol</x:ref>&gt; (<xref target="element.ttcol"/>).</t>
   <t anchor="element.cref.contents"><!--AG-->
      <xref format="none" target="grammar.cref">Content model</xref>:
    </t>
   <t><!--AG-->In any order:</t>
   <ul><!--AG-->
      <li><!--AG-->Text</li>
      <li><!--AG-->
         <iref item="Elements" subitem="em"/>
         <iref item="em element" subitem="inside cref"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="eref"/>
         <iref item="eref element" subitem="inside cref"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="relref"/>
         <iref item="relref element" subitem="inside cref"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="strong"/>
         <iref item="strong element" subitem="inside cref"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sub"/>
         <iref item="sub element" subitem="inside cref"/>&lt;<x:ref>sub</x:ref>&gt; elements (<xref target="element.sub"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sup"/>
         <iref item="sup element" subitem="inside cref"/>&lt;<x:ref>sup</x:ref>&gt; elements (<xref target="element.sup"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="tt"/>
         <iref item="tt element" subitem="inside cref"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="xref"/>
         <iref item="xref element" subitem="inside cref"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
   </ul>

   <!--cref/@anchor-->
   <section anchor="element.cref.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="cref element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in cref element"/>
      <t>
        Document-wide unique identifier for this comment.
      </t>
   </section>

   <!--cref/@display-->
   <section anchor="element.cref.attribute.display" toc="exclude">
      <name>"display" Attribute</name>
      <iref item="Attributes" subitem="display"/>
      <iref item="cref element" subitem="display attribute"/>
      <iref item="display attribute" subitem="in cref element"/>
      <t>
         Suggests whether or not the comment should be displayed by formatting tools. This might be
         set to "false" if you want to keep a comment in a document after the contents of the comment
         have already been dealt with.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"true" (default)</li>
         <li>"false"</li>
      </ul>
   </section>

   <!--cref/@source-->
   <section anchor="element.cref.attribute.source" toc="exclude">
      <name>"source" Attribute</name>
      <iref item="Attributes" subitem="source"/>
      <iref item="cref element" subitem="source attribute"/>
      <iref item="source attribute" subitem="in cref element"/>
      <t>
            Holds the "source" of a comment, such as the name or the initials
            of the person who made the comment.
         </t>
   </section>
</section>

<!--date-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.date">
   <name>
      <tt>&lt;date&gt;</tt>
   </name>
   <x:anchor-alias value="date"/>
   <iref item="Elements" subitem="date" primary="true"/>
   <iref item="date element" primary="true"/>
   <t>
      Provides information about the publication date.
      This element is used for two cases: the boilerplate of the document
      being produced, and inside bibliographic references that use the &lt;<x:ref>front</x:ref>&gt; element.
   <list style="hanging">
         <t hangText="Boilerplate for Internet-Drafts and RFCs:">
      This element defines the date of publication for the current document (Internet-Draft or RFC).
      When producing Internet-Drafts, the prep tool uses this date to compute the expiration date (see <xref target="IDGUIDE"/>).
      When one or more of "year",
      "month", or "day" are left out, the prep tool will attempt to use the
      current system date if the attributes that are present are consistent with that
      date.
   </t>
         <t>
      In dates in &lt;<x:ref>rfc</x:ref>&gt; elements, the month must be a number or a month in English. 
      The prep tool will silently change text month names to numbers.
      Similarly, the year must be a four-digit number.
   </t>
         <t>
      When the prep tool is used to create Internet-Drafts, it will reject a submitted Internet-Draft that has a &lt;<x:ref>date</x:ref>&gt;
      element in the boilerplate for itself that is anything other than today. That is, the tool
      will not allow a submitter to specify a date other than the day of submission. To avoid this problem,
      authors might simply not include a &lt;<x:ref>date</x:ref>&gt; element in the boilerplate.
   </t>
         <t hangText="Bibliographic references:">
      In dates in &lt;<x:ref>reference</x:ref>&gt; elements, the date information can have prose text for the month or year.
      For example, vague dates (year="ca. 2000"), date ranges (year="2012-2013"),
      non-specific months (month="Second quarter"), and so on are allowed.
   </t>
      </list>
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>front</x:ref>&gt; (<xref target="element.front"/>).</t>
   <t anchor="element.date.contents"><!--AG-->
      <xref format="none" target="grammar.date">Content model</xref>: this element does not have any contents.</t>

   <!--date/@day-->
   <section anchor="element.date.attribute.day" toc="exclude">
      <name>"day" Attribute</name>
      <iref item="Attributes" subitem="day"/>
      <iref item="date element" subitem="day attribute"/>
      <iref item="day attribute" subitem="in date element"/>
      <t>
         The day of publication.
      </t>
   </section>

   <!--date/@month-->
   <section anchor="element.date.attribute.month" toc="exclude">
      <name>"month" Attribute</name>
      <iref item="Attributes" subitem="month"/>
      <iref item="date element" subitem="month attribute"/>
      <iref item="month attribute" subitem="in date element"/>
      <t>
          The month or months of publication.
       </t>
   </section>

   <!--date/@year-->
   <section anchor="element.date.attribute.year" toc="exclude">
      <name>"year" Attribute</name>
      <iref item="Attributes" subitem="year"/>
      <iref item="date element" subitem="year attribute"/>
      <iref item="year attribute" subitem="in date element"/>
      <t>
         The year or years of publication.
      </t>
   </section>
</section>

<!--dd-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.dd">
   <name>
      <tt>&lt;dd&gt;</tt>
   </name>
   <x:anchor-alias value="dd"/>
   <iref item="Elements" subitem="dd" primary="true"/>
   <iref item="dd element" primary="true"/>
   <t>
      The definition part of an entry in a definition list.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>dl</x:ref>&gt; (<xref target="element.dl"/>).</t>
   <t anchor="element.dd.contents"><!--AG-->
      <xref format="none" target="grammar.dd">Content model</xref>:
    </t>
   <t><!--AG-->Either:</t>
   <ul empty="true"><!--AG-->
      <li><!--AG-->
         <t>In any order, but at least one of:</t>
         <ul><!--AG-->
            <li><!--AG-->
               <iref item="Elements" subitem="artwork"/>
               <iref item="artwork element" subitem="inside dd"/>&lt;<x:ref>artwork</x:ref>&gt; elements (<xref target="element.artwork"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="dl"/>
               <iref item="dl element" subitem="inside dd"/>&lt;<x:ref>dl</x:ref>&gt; elements (<xref target="element.dl"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="figure"/>
               <iref item="figure element" subitem="inside dd"/>&lt;<x:ref>figure</x:ref>&gt; elements (<xref target="element.figure"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ol"/>
               <iref item="ol element" subitem="inside dd"/>&lt;<x:ref>ol</x:ref>&gt; elements (<xref target="element.ol"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sourcecode"/>
               <iref item="sourcecode element" subitem="inside dd"/>&lt;<x:ref>sourcecode</x:ref>&gt; elements (<xref target="element.sourcecode"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="t"/>
               <iref item="t element" subitem="inside dd"/>&lt;<x:ref>t</x:ref>&gt; elements (<xref target="element.t"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ul"/>
               <iref item="ul element" subitem="inside dd"/>&lt;<x:ref>ul</x:ref>&gt; elements (<xref target="element.ul"/>)</li>
         </ul>
      </li>
   </ul>
   <t><!--AG-->Or:</t>
   <ul empty="true"><!--AG-->
      <li><!--AG-->
         <t>In any order, but at least one of:</t>
         <ul><!--AG-->
            <li><!--AG-->Text</li>
            <li><!--AG-->
               <iref item="Elements" subitem="bcp14"/>
               <iref item="bcp14 element" subitem="inside dd"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="cref"/>
               <iref item="cref element" subitem="inside dd"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="em"/>
               <iref item="em element" subitem="inside dd"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="eref"/>
               <iref item="eref element" subitem="inside dd"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="iref"/>
               <iref item="iref element" subitem="inside dd"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="relref"/>
               <iref item="relref element" subitem="inside dd"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="strong"/>
               <iref item="strong element" subitem="inside dd"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sub"/>
               <iref item="sub element" subitem="inside dd"/>&lt;<x:ref>sub</x:ref>&gt; elements (<xref target="element.sub"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sup"/>
               <iref item="sup element" subitem="inside dd"/>&lt;<x:ref>sup</x:ref>&gt; elements (<xref target="element.sup"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="tt"/>
               <iref item="tt element" subitem="inside dd"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="xref"/>
               <iref item="xref element" subitem="inside dd"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
         </ul>
      </li>
   </ul>

   <!--dd/@anchor-->
   <section anchor="element.dd.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="dd element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in dd element"/>
      <t>
        Document-wide unique identifier for this definition.
      </t>
   </section>
</section>

<!--displayreference-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.displayreference">
   <name>
      <tt>&lt;displayreference&gt;</tt>
   </name>
   <x:anchor-alias value="displayreference"/>
   <iref item="Elements" subitem="displayreference" primary="true"/>
   <iref item="displayreference element" primary="true"/>
   <t>
      This element gives a mapping between the anchor of a reference and a name that will be displayed instead.
      This allows authors to display more mnemonic anchor names for automatically included references.
      The mapping in this element only applies to &lt;<x:ref>xref</x:ref>&gt; elements whose format is "default".
      For example, if the reference uses the anchor "RFC6949", the following would cause that anchor in the body
      of displayed documents to be "RFC-dev":
<figure>
         <artwork>
&lt;displayreference target="RFC6949" to="RFC-dev"/&gt;
</artwork>
      </figure>
   </t>
   <t>
     If a reference section is sorted, this element changes the sort order.
   </t>
   <t>
     It is expected that this element will only be valid in input documents. It will likely be removed by prep
     tools when preparing a final version after those tools have replaced all of the associated anchors, targets, and "derivedContent"
     attributes.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>back</x:ref>&gt; (<xref target="element.back"/>).</t>
   <t anchor="element.displayreference.contents"><!--AG-->
      <xref format="none" target="grammar.displayreference">Content model</xref>: this element does not have any contents.</t>

   <!--displayreference/@target-->
   <section anchor="element.displayreference.attribute.target" toc="exclude">
      <name>"target" Attribute <em> (Mandatory)</em>
      </name>
      <iref item="Attributes" subitem="target"/>
      <iref item="displayreference element" subitem="target attribute"/>
      <iref item="target attribute" subitem="in displayreference element"/>
      <t>
         This attribute must be the name of an anchor in a &lt;<x:ref>reference</x:ref>&gt; or &lt;<x:ref>referencegroup</x:ref>&gt; element.
      </t>
   </section>

   <!--displayreference/@to-->
   <section anchor="element.displayreference.attribute.to" toc="exclude">
      <name>"to" Attribute <em> (Mandatory)</em>
      </name>
      <iref item="Attributes" subitem="to"/>
      <iref item="displayreference element" subitem="to attribute"/>
      <iref item="to attribute" subitem="in displayreference element"/>
      <t>
        This attribute is a name that will be displayed as the anchor instead of the anchor that is given
        in the &lt;<x:ref>reference</x:ref>&gt; element. The string given must start with one of the following
        characters: 0-9, a-z, or A-Z. The other characters in the string must be 0-9, a-z, A-Z, "-", ".", or "_".
      </t>
   </section>
</section>

<!--dl-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.dl">
   <name>
      <tt>&lt;dl&gt;</tt>
   </name>
   <x:anchor-alias value="dl"/>
   <iref item="Elements" subitem="dl" primary="true"/>
   <iref item="dl element" primary="true"/>
   <t>
      A definition list. Each entry has a pair of elements: a term (&lt;<x:ref>dt</x:ref>&gt;) and
      a definition (&lt;<x:ref>dd</x:ref>&gt;).
      (This is slightly different and simpler than the model used in HTML, which allows for multiple terms for
      a single definition.)
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>abstract</x:ref>&gt; (<xref target="element.abstract"/>), &lt;<x:ref>aside</x:ref>&gt; (<xref target="element.aside"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>note</x:ref>&gt; (<xref target="element.note"/>), &lt;<x:ref>section</x:ref>&gt; (<xref target="element.section"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), and &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>).</t>
   <t anchor="element.dl.contents"><!--AG-->
      <xref format="none" target="grammar.dl">Content model</xref>:
    </t>
   <t><!--AG-->
    One or more sequences of:
  </t>
   <ol><!--AG-->
        
      <li><!--AG-->
         <iref item="Elements" subitem="dt"/>
         <iref item="dt element" subitem="inside dl"/>One &lt;<x:ref>dt</x:ref>&gt; element</li>
        
      <li><!--AG-->
         <iref item="Elements" subitem="dd"/>
         <iref item="dd element" subitem="inside dl"/>One &lt;<x:ref>dd</x:ref>&gt; element</li>
      
   </ol>

   <!--dl/@anchor-->
   <section anchor="element.dl.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="dl element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in dl element"/>
      <t>
        Document-wide unique identifier for the list.
      </t>
   </section>

   <!--dl/@newline-->
   <section anchor="element.dl.attribute.newline" toc="exclude">
      <name>"newline" Attribute</name>
      <iref item="Attributes" subitem="newline"/>
      <iref item="dl element" subitem="newline attribute"/>
      <iref item="newline attribute" subitem="in dl element"/>
      <t>
         The "hanging" attribute defines whether or not the term appears on the same line as the definition.
         hanging="true" indicates that the term is to the left of the definition, while hanging="false"
         indicates that the term will be on a separate line.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"false"</li>
         <li>"true" (default)</li>
      </ul>
   </section>

   <!--dl/@spacing-->
   <section anchor="element.dl.attribute.spacing" toc="exclude">
      <name>"spacing" Attribute</name>
      <iref item="Attributes" subitem="spacing"/>
      <iref item="dl element" subitem="spacing attribute"/>
      <iref item="spacing attribute" subitem="in dl element"/>
      <t>
         Defines whether or not there is a blank line between entries. spacing="normal"
         indicates a single blank line, while spacing="compact" indicates no space between.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"normal" (default)</li>
         <li>"compact"</li>
      </ul>
   </section>
</section>

<!--dt-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.dt">
   <name>
      <tt>&lt;dt&gt;</tt>
   </name>
   <x:anchor-alias value="dt"/>
   <iref item="Elements" subitem="dt" primary="true"/>
   <iref item="dt element" primary="true"/>
   <t>
      The term being defined in a definition list.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>dl</x:ref>&gt; (<xref target="element.dl"/>).</t>
   <t anchor="element.dt.contents"><!--AG-->
      <xref format="none" target="grammar.dt">Content model</xref>:
    </t>
   <t><!--AG-->In any order:</t>
   <ul><!--AG-->
      <li><!--AG-->Text</li>
      <li><!--AG-->
         <iref item="Elements" subitem="bcp14"/>
         <iref item="bcp14 element" subitem="inside dt"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="cref"/>
         <iref item="cref element" subitem="inside dt"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="em"/>
         <iref item="em element" subitem="inside dt"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="eref"/>
         <iref item="eref element" subitem="inside dt"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="iref"/>
         <iref item="iref element" subitem="inside dt"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="relref"/>
         <iref item="relref element" subitem="inside dt"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="strong"/>
         <iref item="strong element" subitem="inside dt"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sub"/>
         <iref item="sub element" subitem="inside dt"/>&lt;<x:ref>sub</x:ref>&gt; elements (<xref target="element.sub"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sup"/>
         <iref item="sup element" subitem="inside dt"/>&lt;<x:ref>sup</x:ref>&gt; elements (<xref target="element.sup"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="tt"/>
         <iref item="tt element" subitem="inside dt"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="xref"/>
         <iref item="xref element" subitem="inside dt"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
   </ul>

   <!--dt/@anchor-->
   <section anchor="element.dt.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="dt element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in dt element"/>
      <t>
        Document-wide unique identifier for this term.
      </t>
   </section>
</section>

<!--em-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.em">
   <name>
      <tt>&lt;em&gt;</tt>
   </name>
   <x:anchor-alias value="em"/>
   <iref item="Elements" subitem="em" primary="true"/>
   <iref item="em element" primary="true"/>
   <t>
        Indicates text that is semantically emphasized. Text enclosed within this element will be displayed as italic after processing.
        This element can be combined with other character formatting elements, and the
        formatting will be additive.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>annotation</x:ref>&gt; (<xref target="element.annotation"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>cref</x:ref>&gt; (<xref target="element.cref"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>dt</x:ref>&gt; (<xref target="element.dt"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>preamble</x:ref>&gt; (<xref target="element.preamble"/>), &lt;<x:ref>refcontent</x:ref>&gt; (<xref target="element.refcontent"/>), &lt;<x:ref>strong</x:ref>&gt; (<xref target="element.strong"/>), &lt;<x:ref>sub</x:ref>&gt; (<xref target="element.sub"/>), &lt;<x:ref>sup</x:ref>&gt; (<xref target="element.sup"/>), &lt;<x:ref>t</x:ref>&gt; (<xref target="element.t"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>), and &lt;<x:ref>tt</x:ref>&gt; (<xref target="element.tt"/>).</t>
   <t anchor="element.em.contents"><!--AG-->
      <xref format="none" target="grammar.em">Content model</xref>:
    </t>
   <t><!--AG-->In any order:</t>
   <ul><!--AG-->
      <li><!--AG-->Text</li>
      <li><!--AG-->
         <iref item="Elements" subitem="bcp14"/>
         <iref item="bcp14 element" subitem="inside em"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="cref"/>
         <iref item="cref element" subitem="inside em"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="eref"/>
         <iref item="eref element" subitem="inside em"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="iref"/>
         <iref item="iref element" subitem="inside em"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="relref"/>
         <iref item="relref element" subitem="inside em"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="strong"/>
         <iref item="strong element" subitem="inside em"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sub"/>
         <iref item="sub element" subitem="inside em"/>&lt;<x:ref>sub</x:ref>&gt; elements (<xref target="element.sub"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sup"/>
         <iref item="sup element" subitem="inside em"/>&lt;<x:ref>sup</x:ref>&gt; elements (<xref target="element.sup"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="tt"/>
         <iref item="tt element" subitem="inside em"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="xref"/>
         <iref item="xref element" subitem="inside em"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
   </ul>
</section>

<!--email-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.email">
   <name>
      <tt>&lt;email&gt;</tt>
   </name>
   <x:anchor-alias value="email"/>
   <iref item="Elements" subitem="email" primary="true"/>
   <iref item="email element" primary="true"/>
   <t>
      Provides an email address.
   </t>
   <t>
      The value is expected to be the addr-spec defined in <xref target="RFC6068" x:fmt="of" x:sec="2"/>.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>address</x:ref>&gt; (<xref target="element.address"/>).</t>
   <t anchor="element.email.contents"><!--AG-->
      <xref format="none" target="grammar.email">Content model</xref>: only text content.</t>

   <!--email/@ascii-->
   <section anchor="element.email.attribute.ascii" toc="exclude">
      <name>"ascii" Attribute</name>
      <iref item="Attributes" subitem="ascii"/>
      <iref item="email element" subitem="ascii attribute"/>
      <iref item="ascii attribute" subitem="in email element"/>
      <t>
         The ASCII equivalent of the author's email address. This is only used if the email address has
         any internationalized components.
      </t>
   </section>
</section>

<!--eref-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.eref">
   <name>
      <tt>&lt;eref&gt;</tt>
   </name>
   <x:anchor-alias value="eref"/>
   <iref item="Elements" subitem="eref" primary="true"/>
   <iref item="eref element" primary="true"/>
   <t>
      Represents an "external" link (as specified in the "target" attribute).
      This is useful for embedding URIs in the body of a document.
   </t>
   <t>
      If the &lt;eref&gt; element has non-empty text content, formatters should use the content as the displayed text that is linked.
      Otherwise, the formatter should use the value of the "target" attribute as the displayed text.
      Formatters will link the displayed text to the value of the "target" attribute in a manner appropriate for the output format.
   </t>
   <t>
      For example, with an input of:
<figure>
         <artwork>
      This is described at
      &lt;eref target="http://www.example.com/reports/r12.html"/&gt;.
</artwork>
      </figure>
   </t>
   <t>
      An HTML formatter might generate:
<figure>
         <artwork>
      This is described at
      &lt;a href="http://www.example.com/reports/r12.html"&gt;
      http://www.example.com/reports/r12.html&lt;/a&gt;.
</artwork>
      </figure>
   </t>
   <t>
      With an input of:
<figure>
         <artwork>
      This is described
      &lt;eref target="http://www.example.com/reports/r12.html"&gt;
      in this interesting report&lt;/eref&gt;.
</artwork>
      </figure>
   </t>
   <t>
      An HTML formatter might generate:
<figure>
         <artwork>
      This is described
      &lt;a href="http://www.example.com/reports/r12.html"&gt;
      in this interesting report&lt;/a&gt;.
</artwork>
      </figure>
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>annotation</x:ref>&gt; (<xref target="element.annotation"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>c</x:ref>&gt; (<xref target="element.c"/>), &lt;<x:ref>cref</x:ref>&gt; (<xref target="element.cref"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>dt</x:ref>&gt; (<xref target="element.dt"/>), &lt;<x:ref>em</x:ref>&gt; (<xref target="element.em"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>name</x:ref>&gt; (<xref target="element.name"/>), &lt;<x:ref>postamble</x:ref>&gt; (<xref target="element.postamble"/>), &lt;<x:ref>preamble</x:ref>&gt; (<xref target="element.preamble"/>), &lt;<x:ref>strong</x:ref>&gt; (<xref target="element.strong"/>), &lt;<x:ref>sub</x:ref>&gt; (<xref target="element.sub"/>), &lt;<x:ref>sup</x:ref>&gt; (<xref target="element.sup"/>), &lt;<x:ref>t</x:ref>&gt; (<xref target="element.t"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>), &lt;<x:ref>tt</x:ref>&gt; (<xref target="element.tt"/>), and &lt;<x:ref>ttcol</x:ref>&gt; (<xref target="element.ttcol"/>).</t>
   <t anchor="element.eref.contents"><!--AG-->
      <xref format="none" target="grammar.eref">Content model</xref>: only text content.</t>

   <!--eref/@target-->
   <section anchor="element.eref.attribute.target" toc="exclude">
      <name>"target" Attribute <em> (Mandatory)</em>
      </name>
      <iref item="Attributes" subitem="target"/>
      <iref item="eref element" subitem="target attribute"/>
      <iref item="target attribute" subitem="in eref element"/>
      <t>
         URI of the link target <xref target="RFC3986"/>.
         This must begin with a scheme name (such as "https://") and thus not be relative to the URL of the current document.
         </t>
   </section>
</section>

<!--figure-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.figure">
   <name>
      <tt>&lt;figure&gt;</tt>
   </name>
   <x:anchor-alias value="figure"/>
   <iref item="Elements" subitem="figure" primary="true"/>
   <iref item="figure element" primary="true"/>
   <t>
      Contains a figure with a caption with the figure number.
      If the element contains a &lt;<x:ref>name</x:ref>&gt; element, the caption will also show that name.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>aside</x:ref>&gt; (<xref target="element.aside"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>section</x:ref>&gt; (<xref target="element.section"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), and &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>).</t>
   <t anchor="element.figure.contents"><!--AG-->
      <xref format="none" target="grammar.figure">Content model</xref>:</t>
   <t><!--AG-->In this order:</t>
   <ol><!--AG-->
        
      <li><!--AG-->
         <iref item="Elements" subitem="name"/>
         <iref item="name element" subitem="inside figure"/>One optional &lt;<x:ref>name</x:ref>&gt; element (<xref target="element.name"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="iref"/>
         <iref item="iref element" subitem="inside figure"/>Optional &lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="preamble"/>
         <iref item="preamble element" subitem="inside figure"/>One optional &lt;<x:ref>preamble</x:ref>&gt; element (<xref target="element.preamble"/>)</li>
      
      <li><!--AG-->
         <t>In any order, but at least one of:</t>
         <ul><!--AG-->
            <li><!--AG-->
               <iref item="Elements" subitem="artwork"/>
               <iref item="artwork element" subitem="inside figure"/>&lt;<x:ref>artwork</x:ref>&gt; elements (<xref target="element.artwork"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sourcecode"/>
               <iref item="sourcecode element" subitem="inside figure"/>&lt;<x:ref>sourcecode</x:ref>&gt; elements (<xref target="element.sourcecode"/>)</li>
         </ul>
      </li>
        
      <li><!--AG-->
         <iref item="Elements" subitem="postamble"/>
         <iref item="postamble element" subitem="inside figure"/>One optional &lt;<x:ref>postamble</x:ref>&gt; element (<xref target="element.postamble"/>)</li>
      
   </ol>

   <!--figure/@align-->
   <section anchor="element.figure.attribute.align" toc="exclude">
      <name>"align" Attribute</name>
      <iref item="Attributes" subitem="align"/>
      <iref item="figure element" subitem="align attribute"/>
      <iref item="align attribute" subitem="in figure element"/>
      <t>
          Deprecated.
      </t>
      <t> 
          Note: does not affect title or &lt;<x:ref>artwork</x:ref>&gt; alignment.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"left" (default)</li>
         <li>"center"</li>
         <li>"right"</li>
      </ul>
   </section>

   <!--figure/@alt-->
   <section anchor="element.figure.attribute.alt" toc="exclude">
      <name>"alt" Attribute</name>
      <iref item="Attributes" subitem="alt"/>
      <iref item="figure element" subitem="alt attribute"/>
      <iref item="alt attribute" subitem="in figure element"/>
      <t>
         Deprecated. If the goal is to provide a single URI for
         a reference, use the "target" attribute in &lt;<x:ref>reference</x:ref>&gt; instead.
       </t>
   </section>

   <!--figure/@anchor-->
   <section anchor="element.figure.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="figure element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in figure element"/>
      <t>
        Document-wide unique identifier for this figure.
      </t>
   </section>

   <!--figure/@height-->
   <section anchor="element.figure.attribute.height" toc="exclude">
      <name>"height" Attribute</name>
      <iref item="Attributes" subitem="height"/>
      <iref item="figure element" subitem="height attribute"/>
      <iref item="height attribute" subitem="in figure element"/>
      <t>
         Deprecated.
       </t>
   </section>

   <!--figure/@src-->
   <section anchor="element.figure.attribute.src" toc="exclude">
      <name>"src" Attribute</name>
      <iref item="Attributes" subitem="src"/>
      <iref item="figure element" subitem="src attribute"/>
      <iref item="src attribute" subitem="in figure element"/>
      <t>
         Deprecated.
       </t>
   </section>

   <!--figure/@suppress-title-->
   <section anchor="element.figure.attribute.suppress-title" toc="exclude">
      <name>"suppress-title" Attribute</name>
      <iref item="Attributes" subitem="suppress-title"/>
      <iref item="figure element" subitem="suppress-title attribute"/>
      <iref item="suppress-title attribute" subitem="in figure element"/>
      <t>
            Deprecated.
         </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"true"</li>
         <li>"false" (default)</li>
      </ul>
   </section>

   <!--figure/@title-->
   <section anchor="element.figure.attribute.title" toc="exclude">
      <name>"title" Attribute</name>
      <iref item="Attributes" subitem="title"/>
      <iref item="figure element" subitem="title attribute"/>
      <iref item="title attribute" subitem="in figure element"/>
      <t>
            Deprecated. Use &lt;<x:ref>name</x:ref>&gt; instead.
      </t>
   </section>

   <!--figure/@width-->
   <section anchor="element.figure.attribute.width" toc="exclude">
      <name>"width" Attribute</name>
      <iref item="Attributes" subitem="width"/>
      <iref item="figure element" subitem="width attribute"/>
      <iref item="width attribute" subitem="in figure element"/>
      <t>
         Deprecated.
       </t>
   </section>
</section>

<!--front-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.front">
   <name>
      <tt>&lt;front&gt;</tt>
   </name>
   <x:anchor-alias value="front"/>
   <iref item="Elements" subitem="front" primary="true"/>
   <iref item="front element" primary="true"/>
   <t>
      Represents the "front matter": metadata (such as author information),
      the Abstract, and additional notes.
   </t>
   <t>
      A &lt;<x:ref>front</x:ref>&gt; element may have more than one &lt;<x:ref>seriesInfo</x:ref>&gt; element.
      A &lt;<x:ref>seriesInfo</x:ref>&gt; element determines the document number (for RFCs)
      or name (for Internet-Drafts).
      Another &lt;<x:ref>seriesInfo</x:ref>&gt; element determines the "maturity level"
      (defined in <xref target="RFC2026"/>), using values of "std" for
      "Standards Track", "bcp" for "BCP", "info" for "Informational", "exp" for "Experimental", and
      "historic" for "Historic".
      The "name" attributes of those
      multiple &lt;<x:ref>seriesInfo</x:ref>&gt; elements interact as described in <xref target="element.seriesInfo"/>.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>reference</x:ref>&gt; (<xref target="element.reference"/>) and &lt;<x:ref>rfc</x:ref>&gt; (<xref target="element.rfc"/>).</t>
   <t anchor="element.front.contents"><!--AG-->
      <xref format="none" target="grammar.front">Content model</xref>:</t>
   <t><!--AG-->In this order:</t>
   <ol><!--AG-->
      <li><!--AG-->
         <iref item="Elements" subitem="title"/>
         <iref item="title element" subitem="inside front"/>One &lt;<x:ref>title</x:ref>&gt; element (<xref target="element.title"/>)</li>
        
      <li><!--AG-->
         <iref item="Elements" subitem="seriesInfo"/>
         <iref item="seriesInfo element" subitem="inside front"/>Optional &lt;<x:ref>seriesInfo</x:ref>&gt; elements (<xref target="element.seriesInfo"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="author"/>
         <iref item="author element" subitem="inside front"/>One or more &lt;<x:ref>author</x:ref>&gt; elements (<xref target="element.author"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="date"/>
         <iref item="date element" subitem="inside front"/>One optional &lt;<x:ref>date</x:ref>&gt; element (<xref target="element.date"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="area"/>
         <iref item="area element" subitem="inside front"/>Optional &lt;<x:ref>area</x:ref>&gt; elements (<xref target="element.area"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="workgroup"/>
         <iref item="workgroup element" subitem="inside front"/>Optional &lt;<x:ref>workgroup</x:ref>&gt; elements (<xref target="element.workgroup"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="keyword"/>
         <iref item="keyword element" subitem="inside front"/>Optional &lt;<x:ref>keyword</x:ref>&gt; elements (<xref target="element.keyword"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="abstract"/>
         <iref item="abstract element" subitem="inside front"/>One optional &lt;<x:ref>abstract</x:ref>&gt; element (<xref target="element.abstract"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="note"/>
         <iref item="note element" subitem="inside front"/>Optional &lt;<x:ref>note</x:ref>&gt; elements (<xref target="element.note"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="boilerplate"/>
         <iref item="boilerplate element" subitem="inside front"/>One optional &lt;<x:ref>boilerplate</x:ref>&gt; element (<xref target="element.boilerplate"/>)</li>
      
   </ol>
</section>

<!--iref-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.iref">
   <name>
      <tt>&lt;iref&gt;</tt>
   </name>
   <x:anchor-alias value="iref"/>
   <iref item="Elements" subitem="iref" primary="true"/>
   <iref item="iref element" primary="true"/>
   <t>
      Provides terms for the document's index.
   </t>
   <t>
      Index entries can be either regular entries (when just the "item"
      attribute is given) or nested entries (by specifying "subitem" as well),
      grouped under a regular entry.
   </t>
   <t>
      Index entries generally refer to the exact place where the &lt;iref&gt; element
      occurred. An exception is the occurrence as a child element of
      &lt;<x:ref>section</x:ref>&gt;, in which case the whole section is
      considered to be relevant for that index entry. In some formats, index
      entries of this type might be displayed as ranges.
   </t>
   <t>
      When the prep tool is creating index content, it collects the items in a case-sensitive fashion
      for both the item and subitem level.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>annotation</x:ref>&gt; (<xref target="element.annotation"/>), &lt;<x:ref>aside</x:ref>&gt; (<xref target="element.aside"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>c</x:ref>&gt; (<xref target="element.c"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>dt</x:ref>&gt; (<xref target="element.dt"/>), &lt;<x:ref>em</x:ref>&gt; (<xref target="element.em"/>), &lt;<x:ref>figure</x:ref>&gt; (<xref target="element.figure"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>postamble</x:ref>&gt; (<xref target="element.postamble"/>), &lt;<x:ref>preamble</x:ref>&gt; (<xref target="element.preamble"/>), &lt;<x:ref>section</x:ref>&gt; (<xref target="element.section"/>), &lt;<x:ref>strong</x:ref>&gt; (<xref target="element.strong"/>), &lt;<x:ref>sub</x:ref>&gt; (<xref target="element.sub"/>), &lt;<x:ref>sup</x:ref>&gt; (<xref target="element.sup"/>), &lt;<x:ref>t</x:ref>&gt; (<xref target="element.t"/>), &lt;<x:ref>table</x:ref>&gt; (<xref target="element.table"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>), &lt;<x:ref>tt</x:ref>&gt; (<xref target="element.tt"/>), and &lt;<x:ref>ttcol</x:ref>&gt; (<xref target="element.ttcol"/>).</t>
   <t anchor="element.iref.contents"><!--AG-->
      <xref format="none" target="grammar.iref">Content model</xref>: this element does not have any contents.</t>

   <!--iref/@item-->
   <section anchor="element.iref.attribute.item" toc="exclude">
      <name>"item" Attribute <em> (Mandatory)</em>
      </name>
      <iref item="Attributes" subitem="item"/>
      <iref item="iref element" subitem="item attribute"/>
      <iref item="item attribute" subitem="in iref element"/>
      <t>
            The item to include.
         </t>
   </section>

   <!--iref/@primary-->
   <section anchor="element.iref.attribute.primary" toc="exclude">
      <name>"primary" Attribute</name>
      <iref item="Attributes" subitem="primary"/>
      <iref item="iref element" subitem="primary attribute"/>
      <iref item="primary attribute" subitem="in iref element"/>
      <t>
            Setting this to "true" declares the occurrence as "primary",
            which might cause it to be highlighted in the index.
            There is no restriction on the number of occurrences that can be "primary".
         </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"true"</li>
         <li>"false" (default)</li>
      </ul>
   </section>

   <!--iref/@subitem-->
   <section anchor="element.iref.attribute.subitem" toc="exclude">
      <name>"subitem" Attribute</name>
      <iref item="Attributes" subitem="subitem"/>
      <iref item="iref element" subitem="subitem attribute"/>
      <iref item="subitem attribute" subitem="in iref element"/>
      <t>
            The subitem to include.
         </t>
   </section>
</section>

<!--keyword-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.keyword">
   <name>
      <tt>&lt;keyword&gt;</tt>
   </name>
   <x:anchor-alias value="keyword"/>
   <iref item="Elements" subitem="keyword" primary="true"/>
   <iref item="keyword element" primary="true"/>
   <t>
      Specifies a keyword applicable to the document.
   </t>
   <t>
      Note that each element should only contain a single keyword; for multiple keywords, the
      element can simply be repeated.
   </t>
   <t>
      Keywords are used both in the RFC Index and in the metadata of generated
      document representations.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>front</x:ref>&gt; (<xref target="element.front"/>).</t>
   <t anchor="element.keyword.contents"><!--AG-->
      <xref format="none" target="grammar.keyword">Content model</xref>: only text content.</t>
</section>

<!--li-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.li">
   <name>
      <tt>&lt;li&gt;</tt>
   </name>
   <x:anchor-alias value="li"/>
   <iref item="Elements" subitem="li" primary="true"/>
   <iref item="li element" primary="true"/>
   <t>
      A list element, used in &lt;<x:ref>ol</x:ref>&gt; and &lt;<x:ref>ul</x:ref>&gt;.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>ol</x:ref>&gt; (<xref target="element.ol"/>) and &lt;<x:ref>ul</x:ref>&gt; (<xref target="element.ul"/>).</t>
   <t anchor="element.li.contents"><!--AG-->
      <xref format="none" target="grammar.li">Content model</xref>:
    </t>
   <t><!--AG-->Either:</t>
   <ul empty="true"><!--AG-->
      <li><!--AG-->
         <t>In any order, but at least one of:</t>
         <ul><!--AG-->
            <li><!--AG-->
               <iref item="Elements" subitem="artwork"/>
               <iref item="artwork element" subitem="inside li"/>&lt;<x:ref>artwork</x:ref>&gt; elements (<xref target="element.artwork"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="dl"/>
               <iref item="dl element" subitem="inside li"/>&lt;<x:ref>dl</x:ref>&gt; elements (<xref target="element.dl"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="figure"/>
               <iref item="figure element" subitem="inside li"/>&lt;<x:ref>figure</x:ref>&gt; elements (<xref target="element.figure"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ol"/>
               <iref item="ol element" subitem="inside li"/>&lt;<x:ref>ol</x:ref>&gt; elements (<xref target="element.ol"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sourcecode"/>
               <iref item="sourcecode element" subitem="inside li"/>&lt;<x:ref>sourcecode</x:ref>&gt; elements (<xref target="element.sourcecode"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="t"/>
               <iref item="t element" subitem="inside li"/>&lt;<x:ref>t</x:ref>&gt; elements (<xref target="element.t"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ul"/>
               <iref item="ul element" subitem="inside li"/>&lt;<x:ref>ul</x:ref>&gt; elements (<xref target="element.ul"/>)</li>
         </ul>
      </li>
   </ul>
   <t><!--AG-->Or:</t>
   <ul empty="true"><!--AG-->
      <li><!--AG-->
         <t>In any order, but at least one of:</t>
         <ul><!--AG-->
            <li><!--AG-->Text</li>
            <li><!--AG-->
               <iref item="Elements" subitem="bcp14"/>
               <iref item="bcp14 element" subitem="inside li"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="cref"/>
               <iref item="cref element" subitem="inside li"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="em"/>
               <iref item="em element" subitem="inside li"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="eref"/>
               <iref item="eref element" subitem="inside li"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="iref"/>
               <iref item="iref element" subitem="inside li"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="relref"/>
               <iref item="relref element" subitem="inside li"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="strong"/>
               <iref item="strong element" subitem="inside li"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sub"/>
               <iref item="sub element" subitem="inside li"/>&lt;<x:ref>sub</x:ref>&gt; elements (<xref target="element.sub"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sup"/>
               <iref item="sup element" subitem="inside li"/>&lt;<x:ref>sup</x:ref>&gt; elements (<xref target="element.sup"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="tt"/>
               <iref item="tt element" subitem="inside li"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="xref"/>
               <iref item="xref element" subitem="inside li"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
         </ul>
      </li>
   </ul>

   <!--li/@anchor-->
   <section anchor="element.li.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="li element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in li element"/>
      <t>
        Document-wide unique identifier for this list item.
      </t>
   </section>
</section>

<!--link-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.link">
   <name>
      <tt>&lt;link&gt;</tt>
   </name>
   <x:anchor-alias value="link"/>
   <iref item="Elements" subitem="link" primary="true"/>
   <iref item="link element" primary="true"/>
   <t>
      A link to an external document that is related to the RFC.
   </t>
   <t>
      The following are the supported types of external documents that can be pointed to in
      a &lt;link&gt; element:
         <list style="symbols">
         <t>
               The current International Standard Serial Number (ISSN) for the RFC Series.
               The value for the "rel" attribute is "item".
               The link should use the form "urn:issn:".
            </t>
         <t>
               The Digital Object Identifier (DOI) for this document.
               The value for the "rel" attribute is "describedBy".
               The link should use the form specified in <xref target="RFC7669"/>;
               this is expected to change in the future.
            </t>
         <t>
               The Internet-Draft that was submitted to the RFC Editor to become the published RFC.
               The value for the "rel" attribute is "convertedFrom".
               The link should be to an IETF-controlled web site that retains copies of Internet-Drafts.
            </t>
         <t>
               A representation of the document offered by the document author.
               The value for the "rel" attribute is "alternate".
               The link can be to a personally run web site.
            </t>
      </list>
   </t>
   <t>
        In RFC production mode, the prep tool needs to check the values for &lt;link&gt; before an RFC is published.
        In draft production mode, the prep tool might remove some &lt;link&gt; elements during the draft submission process.
      </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>rfc</x:ref>&gt; (<xref target="element.rfc"/>).</t>
   <t anchor="element.link.contents"><!--AG-->
      <xref format="none" target="grammar.link">Content model</xref>: this element does not have any contents.</t>

   <!--link/@href-->
   <section anchor="element.link.attribute.href" toc="exclude">
      <name>"href" Attribute <em> (Mandatory)</em>
      </name>
      <iref item="Attributes" subitem="href"/>
      <iref item="link element" subitem="href attribute"/>
      <iref item="href attribute" subitem="in link element"/>
      <t>
         The URI of the external document.
      </t>
   </section>

   <!--link/@rel-->
   <section anchor="element.link.attribute.rel" toc="exclude">
      <name>"rel" Attribute</name>
      <iref item="Attributes" subitem="rel"/>
      <iref item="link element" subitem="rel attribute"/>
      <iref item="rel attribute" subitem="in link element"/>
      <t>
         The relationship of the external document to this one. The relationships are taken from
         the "Link Relations" registry maintained by IANA <xref target="LINKRELATIONS"/>.
       </t>
   </section>
</section>

<!--middle-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.middle">
   <name>
      <tt>&lt;middle&gt;</tt>
   </name>
   <x:anchor-alias value="middle"/>
   <iref item="Elements" subitem="middle" primary="true"/>
   <iref item="middle element" primary="true"/>
   <t>
      Represents the main content of the document.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>rfc</x:ref>&gt; (<xref target="element.rfc"/>).</t>
   <t anchor="element.middle.contents"><!--AG-->
      <xref format="none" target="grammar.middle">Content model</xref>:
    </t>
        
   <t><!--AG-->
      <iref item="Elements" subitem="section"/>
      <iref item="section element" subitem="inside middle"/>One or more &lt;<x:ref>section</x:ref>&gt; elements (<xref target="element.section"/>)</t>
      
</section>

<!--name-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.name">
   <name>
      <tt>&lt;name&gt;</tt>
   </name>
   <x:anchor-alias value="name"/>
   <iref item="Elements" subitem="name" primary="true"/>
   <iref item="name element" primary="true"/>
   <t>
      The name of the section, note, figure, or texttable. This name can
      indicate markup of flowing text (for example, including references or
      making some characters use a fixed-width font).
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>figure</x:ref>&gt; (<xref target="element.figure"/>), &lt;<x:ref>note</x:ref>&gt; (<xref target="element.note"/>), &lt;<x:ref>references</x:ref>&gt; (<xref target="element.references"/>), &lt;<x:ref>section</x:ref>&gt; (<xref target="element.section"/>), &lt;<x:ref>table</x:ref>&gt; (<xref target="element.table"/>), and &lt;<x:ref>texttable</x:ref>&gt; (<xref target="element.texttable"/>).</t>
   <t anchor="element.name.contents"><!--AG-->
      <xref format="none" target="grammar.name">Content model</xref>:
    </t>
   <t><!--AG-->In any order:</t>
   <ul><!--AG-->
      <li><!--AG-->Text</li>
      <li><!--AG-->
         <iref item="Elements" subitem="cref"/>
         <iref item="cref element" subitem="inside name"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="eref"/>
         <iref item="eref element" subitem="inside name"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="relref"/>
         <iref item="relref element" subitem="inside name"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="tt"/>
         <iref item="tt element" subitem="inside name"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="xref"/>
         <iref item="xref element" subitem="inside name"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
   </ul>
</section>

<!--note-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.note">
   <name>
      <tt>&lt;note&gt;</tt>
   </name>
   <x:anchor-alias value="note"/>
   <iref item="Elements" subitem="note" primary="true"/>
   <iref item="note element" primary="true"/>
   <t>
      Creates an unnumbered, titled block of text that appears after the Abstract.
   </t>
   <t>
      It is usually used for additional information to reviewers (Working
      Group information, mailing list, ...) or for additional publication
      information such as "IESG Notes".
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>front</x:ref>&gt; (<xref target="element.front"/>).</t>
   <t anchor="element.note.contents"><!--AG-->
      <xref format="none" target="grammar.note">Content model</xref>:</t>
   <t><!--AG-->In this order:</t>
   <ol><!--AG-->
        
      <li><!--AG-->
         <iref item="Elements" subitem="name"/>
         <iref item="name element" subitem="inside note"/>One optional &lt;<x:ref>name</x:ref>&gt; element (<xref target="element.name"/>)</li>
      
      <li><!--AG-->
         <t>In any order, but at least one of:</t>
         <ul><!--AG-->
            <li><!--AG-->
               <iref item="Elements" subitem="dl"/>
               <iref item="dl element" subitem="inside note"/>&lt;<x:ref>dl</x:ref>&gt; elements (<xref target="element.dl"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ol"/>
               <iref item="ol element" subitem="inside note"/>&lt;<x:ref>ol</x:ref>&gt; elements (<xref target="element.ol"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="t"/>
               <iref item="t element" subitem="inside note"/>&lt;<x:ref>t</x:ref>&gt; elements (<xref target="element.t"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ul"/>
               <iref item="ul element" subitem="inside note"/>&lt;<x:ref>ul</x:ref>&gt; elements (<xref target="element.ul"/>)</li>
         </ul>
      </li>
   </ol>

   <!--note/@removeInRFC-->
   <section anchor="element.note.attribute.removeInRFC" toc="exclude">
      <name>"removeInRFC" Attribute</name>
      <iref item="Attributes" subitem="removeInRFC"/>
      <iref item="note element" subitem="removeInRFC attribute"/>
      <iref item="removeInRFC attribute" subitem="in note element"/>
      <t>
         If set to "true", this note is marked in the prep tool with text indicating that it should be
         removed before the document is published as an RFC.
         That text will be "This note is to be removed before publishing as an RFC."
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"true"</li>
         <li>"false" (default)</li>
      </ul>
   </section>

   <!--note/@title-->
   <section anchor="element.note.attribute.title" toc="exclude">
      <name>"title" Attribute</name>
      <iref item="Attributes" subitem="title"/>
      <iref item="note element" subitem="title attribute"/>
      <iref item="title attribute" subitem="in note element"/>
      <t>
            Deprecated. Use &lt;<x:ref>name</x:ref>&gt; instead.
         </t>
   </section>
</section>

<!--ol-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.ol">
   <name>
      <tt>&lt;ol&gt;</tt>
   </name>
   <x:anchor-alias value="ol"/>
   <iref item="Elements" subitem="ol" primary="true"/>
   <iref item="ol element" primary="true"/>
   <t>
      An ordered list. The labels on the items will be either a number or a letter, depending
      on the value of the style attribute. 
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>abstract</x:ref>&gt; (<xref target="element.abstract"/>), &lt;<x:ref>aside</x:ref>&gt; (<xref target="element.aside"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>note</x:ref>&gt; (<xref target="element.note"/>), &lt;<x:ref>section</x:ref>&gt; (<xref target="element.section"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), and &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>).</t>
   <t anchor="element.ol.contents"><!--AG-->
      <xref format="none" target="grammar.ol">Content model</xref>:
    </t>
        
   <t><!--AG-->
      <iref item="Elements" subitem="li"/>
      <iref item="li element" subitem="inside ol"/>One or more &lt;<x:ref>li</x:ref>&gt; elements (<xref target="element.li"/>)</t>
      

   <!--ol/@anchor-->
   <section anchor="element.ol.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="ol element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in ol element"/>
      <t>
        Document-wide unique identifier for the list.
      </t>
   </section>

   <!--ol/@group-->
   <section anchor="element.ol.attribute.group" toc="exclude">
      <name>"group" Attribute</name>
      <iref item="Attributes" subitem="group"/>
      <iref item="ol element" subitem="group attribute"/>
      <iref item="group attribute" subitem="in ol element"/>
      <t>
         When the prep tool sees an &lt;ol&gt; element with a "group" attribute that has already been seen,
         it continues the numbering of the list from where the previous list with the same
         group name left off.
         If an &lt;ol&gt; element has both a "group" attribute and a "start" attribute, the group's
         numbering is reset to the given start value.
      </t>
   </section>

   <!--ol/@spacing-->
   <section anchor="element.ol.attribute.spacing" toc="exclude">
      <name>"spacing" Attribute</name>
      <iref item="Attributes" subitem="spacing"/>
      <iref item="ol element" subitem="spacing attribute"/>
      <iref item="spacing attribute" subitem="in ol element"/>
      <t>
         Defines whether or not there is a blank line between entries. spacing="normal"
         indicates a single blank line, while spacing="compact" indicates no space between.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"normal" (default)</li>
         <li>"compact"</li>
      </ul>
   </section>

   <!--ol/@start-->
   <section anchor="element.ol.attribute.start" toc="exclude">
      <name>"start" Attribute</name>
      <iref item="Attributes" subitem="start"/>
      <iref item="ol element" subitem="start attribute"/>
      <iref item="start attribute" subitem="in ol element"/>
      <t>
         The ordinal value at which to start the list. This defaults to "1" and must be an integer of 0 or greater.
      </t>
   </section>

   <!--ol/@type-->
   <section anchor="element.ol.attribute.type" toc="exclude">
      <name>"type" Attribute</name>
      <iref item="Attributes" subitem="type"/>
      <iref item="ol element" subitem="type attribute"/>
      <iref item="type attribute" subitem="in ol element"/>
      <t>
         The type of the labels on list items. If the length of the type value is 1, the
         meaning is the same as it is for HTML:
         <list style="hanging">
            <t hangText="a">Lowercase letters (a, b, c, ...)</t>
            <t hangText="A">Uppercase letters (A, B, C, ...)</t>
            <t hangText="1">Decimal numbers (1, 2, 3, ...)</t>
            <t hangText="i">Lowercase Roman numerals (i, ii, iii, ...)</t>
            <t hangText="I">Uppercase Roman numerals (I, II, III, ...)</t>
         </list>
         For types "a" and "A", after the 26th entry, the numbering starts at "aa"/"AA", then
         "ab"/"AB", and so on.
      </t>
      <t>
        If the length of the type value is greater than 1, the value must contain a
        percent-encoded indicator and other text.
        The value is a free-form text that allows counter values to be
        inserted using a "percent-letter" format. For instance, "[REQ%d]"
        generates labels of the form "[REQ1]", where "%d" inserts the
        item number as a decimal number.
      </t>
      <t>
         The following formats are supported:
         <list style="hanging">
            <t hangText="%c">Lowercase letters (a, b, c, ...)</t>
            <t hangText="%C">Uppercase letters (A, B, C, ...)</t>
            <t hangText="%d">Decimal numbers (1, 2, 3, ...)</t>
            <t hangText="%i">Lowercase Roman numerals (i, ii, iii, ...)</t>
            <t hangText="%I">Uppercase Roman numerals (I, II, III, ...)</t>
            <t hangText="%%">Represents a percent sign</t>
         </list>
         Other formats are reserved for future use. Only one percent encoding other than "%%" is allowed in a type string.
       </t>
      <t>
        It is an error for the type string to be empty.
        For bulleted lists, use the &lt;<x:ref>ul</x:ref>&gt; element.
        For lists that have neither bullets nor numbers, use the &lt;<x:ref>ul</x:ref>&gt; element with the
        'empty="true"' attribute.
      </t>
      <t>
        If no type attribute is given, the default type is the same as "type='%d.'".
      </t>
   </section>
</section>

<!--organization-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.organization">
   <name>
      <tt>&lt;organization&gt;</tt>
   </name>
   <x:anchor-alias value="organization"/>
   <iref item="Elements" subitem="organization" primary="true"/>
   <iref item="organization element" primary="true"/>
   <t>
      Specifies the affiliation <xref target="RFC7322"/> of an author.
   </t>
   <t>
      This information appears both in the "Author's Address" section and
      on the front page (see <xref target="RFC7322"/> for more information).
      If the value is long, an abbreviated variant can be specified in the
      "abbrev" attribute.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>author</x:ref>&gt; (<xref target="element.author"/>).</t>
   <t anchor="element.organization.contents"><!--AG-->
      <xref format="none" target="grammar.organization">Content model</xref>: only text content.</t>

   <!--organization/@abbrev-->
   <section anchor="element.organization.attribute.abbrev" toc="exclude">
      <name>"abbrev" Attribute</name>
      <iref item="Attributes" subitem="abbrev"/>
      <iref item="organization element" subitem="abbrev attribute"/>
      <iref item="abbrev attribute" subitem="in organization element"/>
      <t>
            Abbreviated variant.
         </t>
   </section>

   <!--organization/@ascii-->
   <section anchor="element.organization.attribute.ascii" toc="exclude">
      <name>"ascii" Attribute</name>
      <iref item="Attributes" subitem="ascii"/>
      <iref item="organization element" subitem="ascii attribute"/>
      <iref item="ascii attribute" subitem="in organization element"/>
      <t>
         The ASCII equivalent of the organization's name.
      </t>
   </section>
</section>

<!--phone-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.phone">
   <name>
      <tt>&lt;phone&gt;</tt>
   </name>
   <x:anchor-alias value="phone"/>
   <iref item="Elements" subitem="phone" primary="true"/>
   <iref item="phone element" primary="true"/>
   <t>
      Represents a phone number.
   </t>
   <t>
      The value is expected to be the scheme-specific part of a "tel" URI
      (and so does not include the prefix "tel:"), using the "global-number-digits"
      syntax. See <xref target="RFC3966" x:fmt="of" x:sec="3"/> 
      for details.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>address</x:ref>&gt; (<xref target="element.address"/>).</t>
   <t anchor="element.phone.contents"><!--AG-->
      <xref format="none" target="grammar.phone">Content model</xref>: only text content.</t>
</section>

<!--postal-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.postal">
   <name>
      <tt>&lt;postal&gt;</tt>
   </name>
   <x:anchor-alias value="postal"/>
   <iref item="Elements" subitem="postal" primary="true"/>
   <iref item="postal element" primary="true"/>
   <t>
      Contains optional child elements providing postal information. These elements will be
      displayed in an order that is specific to formatters.
      A postal address can contain only a set of &lt;<x:ref>street</x:ref>&gt;, &lt;<x:ref>city</x:ref>&gt;,
      &lt;<x:ref>region</x:ref>&gt;, &lt;<x:ref>code</x:ref>&gt;, and &lt;<x:ref>country</x:ref>&gt;
      elements, or only an ordered set of &lt;<x:ref>postalLine</x:ref>&gt; elements, but not both.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>address</x:ref>&gt; (<xref target="element.address"/>).</t>
   <t anchor="element.postal.contents"><!--AG-->
      <xref format="none" target="grammar.postal">Content model</xref>:
    </t>
   <t><!--AG-->Either:</t>
   <ul empty="true"><!--AG-->
      <li><!--AG-->
         <t>In any order:</t>
         <ul><!--AG-->
            <li><!--AG-->
               <iref item="Elements" subitem="city"/>
               <iref item="city element" subitem="inside postal"/>&lt;<x:ref>city</x:ref>&gt; elements (<xref target="element.city"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="code"/>
               <iref item="code element" subitem="inside postal"/>&lt;<x:ref>code</x:ref>&gt; elements (<xref target="element.code"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="country"/>
               <iref item="country element" subitem="inside postal"/>&lt;<x:ref>country</x:ref>&gt; elements (<xref target="element.country"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="region"/>
               <iref item="region element" subitem="inside postal"/>&lt;<x:ref>region</x:ref>&gt; elements (<xref target="element.region"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="street"/>
               <iref item="street element" subitem="inside postal"/>&lt;<x:ref>street</x:ref>&gt; elements (<xref target="element.street"/>)</li>
         </ul>
      </li>
   </ul>
   <t><!--AG-->Or:</t>
   <ul empty="true"><!--AG-->
          
      <li><!--AG-->
         <iref item="Elements" subitem="postalLine"/>
         <iref item="postalLine element" subitem="inside postal"/>One or more &lt;<x:ref>postalLine</x:ref>&gt; elements (<xref target="element.postalLine"/>)</li>
        
   </ul>
</section>

<!--postalLine-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.postalLine">
   <name>
      <tt>&lt;postalLine&gt;</tt>
   </name>
   <x:anchor-alias value="postalLine"/>
   <iref item="Elements" subitem="postalLine" primary="true"/>
   <iref item="postalLine element" primary="true"/>
   <t>
      Represents one line of a postal address. When more than one &lt;postalLine&gt; is given, the prep tool
      emits them in the order given.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>postal</x:ref>&gt; (<xref target="element.postal"/>).</t>
   <t anchor="element.postalLine.contents"><!--AG-->
      <xref format="none" target="grammar.postalLine">Content model</xref>: only text content.</t>

   <!--postalLine/@ascii-->
   <section anchor="element.postalLine.attribute.ascii" toc="exclude">
      <name>"ascii" Attribute</name>
      <iref item="Attributes" subitem="ascii"/>
      <iref item="postalLine element" subitem="ascii attribute"/>
      <iref item="ascii attribute" subitem="in postalLine element"/>
      <t>
         The ASCII equivalent of the text in the address line.
      </t>
   </section>
</section>

<!--refcontent-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.refcontent">
   <name>
      <tt>&lt;refcontent&gt;</tt>
   </name>
   <x:anchor-alias value="refcontent"/>
   <iref item="Elements" subitem="refcontent" primary="true"/>
   <iref item="refcontent element" primary="true"/>
   <t>
      Text that should appear between the title and the date of a reference. The purpose
      of this element is to prevent the need to abuse &lt;<x:ref>seriesInfo</x:ref>&gt; to
      get such text in a reference.
   </t>
   <t>
     For example:
<figure>
         <artwork>
&lt;reference anchor="April1"&gt;
  &lt;front&gt;
    &lt;title&gt;On Being A Fool&lt;/title&gt;
    &lt;author initials="K." surname="Phunny" fullname="Knot Phunny"/&gt;
    &lt;date year="2000" month="April"/&gt;
  &lt;/front&gt;
  &lt;refcontent&gt;Self-published pamphlet&lt;/refcontent&gt;
&lt;/reference&gt;
</artwork>
      </figure>
     would render as:
<figure>
         <artwork>
   [April1]     Phunny, K., "On Being A Fool", Self-published
                pamphlet, April 2000.
</artwork>
      </figure>
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>reference</x:ref>&gt; (<xref target="element.reference"/>).</t>
   <t anchor="element.refcontent.contents"><!--AG-->
      <xref format="none" target="grammar.refcontent">Content model</xref>:
    </t>
   <t><!--AG-->In any order:</t>
   <ul><!--AG-->
      <li><!--AG-->Text</li>
      <li><!--AG-->
         <iref item="Elements" subitem="bcp14"/>
         <iref item="bcp14 element" subitem="inside refcontent"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="em"/>
         <iref item="em element" subitem="inside refcontent"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="strong"/>
         <iref item="strong element" subitem="inside refcontent"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sub"/>
         <iref item="sub element" subitem="inside refcontent"/>&lt;<x:ref>sub</x:ref>&gt; elements (<xref target="element.sub"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sup"/>
         <iref item="sup element" subitem="inside refcontent"/>&lt;<x:ref>sup</x:ref>&gt; elements (<xref target="element.sup"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="tt"/>
         <iref item="tt element" subitem="inside refcontent"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
   </ul>
</section>

<!--reference-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.reference">
   <name>
      <tt>&lt;reference&gt;</tt>
   </name>
   <x:anchor-alias value="reference"/>
   <iref item="Elements" subitem="reference" primary="true"/>
   <iref item="reference element" primary="true"/>
   <t>
      Represents a bibliographic reference.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>referencegroup</x:ref>&gt; (<xref target="element.referencegroup"/>) and &lt;<x:ref>references</x:ref>&gt; (<xref target="element.references"/>).</t>
   <t anchor="element.reference.contents"><!--AG-->
      <xref format="none" target="grammar.reference">Content model</xref>:</t>
   <t><!--AG-->In this order:</t>
   <ol><!--AG-->
      <li><!--AG-->
         <iref item="Elements" subitem="front"/>
         <iref item="front element" subitem="inside reference"/>One &lt;<x:ref>front</x:ref>&gt; element (<xref target="element.front"/>)</li>
      <li><!--AG-->
         <t>In any order:</t>
         <ul><!--AG-->
            <li><!--AG-->
               <iref item="Elements" subitem="annotation"/>
               <iref item="annotation element" subitem="inside reference"/>&lt;<x:ref>annotation</x:ref>&gt; elements (<xref target="element.annotation"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="format"/>
               <iref item="format element" subitem="inside reference"/>&lt;<x:ref>format</x:ref>&gt; elements (<xref target="element.format"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="refcontent"/>
               <iref item="refcontent element" subitem="inside reference"/>&lt;<x:ref>refcontent</x:ref>&gt; elements (<xref target="element.refcontent"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="seriesInfo"/>
               <iref item="seriesInfo element" subitem="inside reference"/>&lt;<x:ref>seriesInfo</x:ref>&gt; elements (<xref target="element.seriesInfo"/>; deprecated in this context)</li>
         </ul>
      </li>
   </ol>

   <!--reference/@anchor-->
   <section anchor="element.reference.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute <em> (Mandatory)</em>
      </name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="reference element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in reference element"/>
      <t>
        Document-wide unique identifier for this reference. Usually, this will
        be used both to "label" the reference in the "References" section and
        as an identifier in links to this reference entry.
      </t>
   </section>

   <!--reference/@quoteTitle-->
   <section anchor="element.reference.attribute.quoteTitle" toc="exclude">
      <name>"quoteTitle" Attribute</name>
      <iref item="Attributes" subitem="quoteTitle"/>
      <iref item="reference element" subitem="quoteTitle attribute"/>
      <iref item="quoteTitle attribute" subitem="in reference element"/>
      <t>
         Specifies whether or not the title in the reference should be quoted.
         This can be used to prevent quoting, such as on errata.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"true" (default)</li>
         <li>"false"</li>
      </ul>
   </section>

   <!--reference/@target-->
   <section anchor="element.reference.attribute.target" toc="exclude">
      <name>"target" Attribute</name>
      <iref item="Attributes" subitem="target"/>
      <iref item="reference element" subitem="target attribute"/>
      <iref item="target attribute" subitem="in reference element"/>
      <t>
            Holds the URI for the reference.
         </t>
   </section>
</section>

<!--referencegroup-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.referencegroup">
   <name>
      <tt>&lt;referencegroup&gt;</tt>
   </name>
   <x:anchor-alias value="referencegroup"/>
   <iref item="Elements" subitem="referencegroup" primary="true"/>
   <iref item="referencegroup element" primary="true"/>
   <t>
      Represents a list of bibliographic references that will be represented as a single reference.
      This is most often used to reference STDs and BCPs, where a single reference
      (such as "BCP 9") may encompass more than one RFC.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>references</x:ref>&gt; (<xref target="element.references"/>).</t>
   <t anchor="element.referencegroup.contents"><!--AG-->
      <xref format="none" target="grammar.referencegroup">Content model</xref>:
    </t>
        
   <t><!--AG-->
      <iref item="Elements" subitem="reference"/>
      <iref item="reference element" subitem="inside referencegroup"/>One or more &lt;<x:ref>reference</x:ref>&gt; elements (<xref target="element.reference"/>)</t>
      

   <!--referencegroup/@anchor-->
   <section anchor="element.referencegroup.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute <em> (Mandatory)</em>
      </name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="referencegroup element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in referencegroup element"/>
      <t>
        Document-wide unique identifier for this reference group. Usually, this will
        be used both to "label" the reference group in the "References" section and
        as an identifier in links to this reference entry.
      </t>
   </section>
</section>

<!--references-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.references">
   <name>
      <tt>&lt;references&gt;</tt>
   </name>
   <x:anchor-alias value="references"/>
   <iref item="Elements" subitem="references" primary="true"/>
   <iref item="references element" primary="true"/>
   <t>
      Contains a set of bibliographic references.
   </t>
   <t>
      In the early days of the RFC Series, there was only one "References" section per RFC. This convention
      was later changed to group references into two sets, "Normative" and "Informative",
      as described in <xref target="RFC7322"/>.
      This vocabulary supports the split with the &lt;<x:ref>name</x:ref>&gt; child element.
      In general, the title should be either "Normative References" or "Informative References".
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>back</x:ref>&gt; (<xref target="element.back"/>).</t>
   <t anchor="element.references.contents"><!--AG-->
      <xref format="none" target="grammar.references">Content model</xref>:</t>
   <t><!--AG-->In this order:</t>
   <ol><!--AG-->
        
      <li><!--AG-->
         <iref item="Elements" subitem="name"/>
         <iref item="name element" subitem="inside references"/>One optional &lt;<x:ref>name</x:ref>&gt; element (<xref target="element.name"/>)</li>
      
      <li><!--AG-->
         <t>In any order:</t>
         <ul><!--AG-->
            <li><!--AG-->
               <iref item="Elements" subitem="reference"/>
               <iref item="reference element" subitem="inside references"/>&lt;<x:ref>reference</x:ref>&gt; elements (<xref target="element.reference"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="referencegroup"/>
               <iref item="referencegroup element" subitem="inside references"/>&lt;<x:ref>referencegroup</x:ref>&gt; elements (<xref target="element.referencegroup"/>)</li>
         </ul>
      </li>
   </ol>

   <!--references/@anchor-->
   <section anchor="element.references.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="references element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in references element"/>
      <t>
         An optional user-supplied identifier for this set of references.
      </t>
   </section>

   <!--references/@title-->
   <section anchor="element.references.attribute.title" toc="exclude">
      <name>"title" Attribute</name>
      <iref item="Attributes" subitem="title"/>
      <iref item="references element" subitem="title attribute"/>
      <iref item="title attribute" subitem="in references element"/>
      <t>
         Deprecated. Use &lt;<x:ref>name</x:ref>&gt; instead.
      </t>
   </section>
</section>

<!--region-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.region">
   <name>
      <tt>&lt;region&gt;</tt>
   </name>
   <x:anchor-alias value="region"/>
   <iref item="Elements" subitem="region" primary="true"/>
   <iref item="region element" primary="true"/>
   <t>
      Provides the region name in a postal address.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>postal</x:ref>&gt; (<xref target="element.postal"/>).</t>
   <t anchor="element.region.contents"><!--AG-->
      <xref format="none" target="grammar.region">Content model</xref>: only text content.</t>

   <!--region/@ascii-->
   <section anchor="element.region.attribute.ascii" toc="exclude">
      <name>"ascii" Attribute</name>
      <iref item="Attributes" subitem="ascii"/>
      <iref item="region element" subitem="ascii attribute"/>
      <iref item="ascii attribute" subitem="in region element"/>
      <t>
         The ASCII equivalent of the region name.
      </t>
   </section>
</section>

<!--relref-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.relref">
   <name>
      <tt>&lt;relref&gt;</tt>
   </name>
   <x:anchor-alias value="relref"/>
   <iref item="Elements" subitem="relref" primary="true"/>
   <iref item="relref element" primary="true"/>
   <t>
      Represents a link to a specific part of a document that appears in a &lt;<x:ref>reference</x:ref>&gt; element.
      Formatters that have links (such as HTML and PDF) render &lt;relref&gt; elements as external hyperlinks
      to the specified part of the reference, creating the link target by combining the base URI from the
      &lt;<x:ref>reference</x:ref>&gt; element with the "relative" attribute from this element.
      The "target" attribute is required, and it must be the anchor of a &lt;<x:ref>reference</x:ref>&gt; element.
   </t>
   <t>   
      The "section" attribute is required, and the "relative" attribute is optional.
      If the reference is not an RFC or Internet-Draft that is in the v3 format, the element needs to have a "relative" attribute;
      in this case, the value of the "section" attribute is ignored.
   </t>
   <t>
      An example of the &lt;relref&gt; element with text content might be:
<figure>
         <artwork>
      See
      &lt;relref section="2.3" target="RFC9999" displayFormat="bare"&gt;
      the protocol overview&lt;/relref&gt;
      for more information.
</artwork>
      </figure>
   </t>
   <t>
       An HTML formatter might generate:
<figure>
         <artwork>
      See 
      &lt;a href="http://www.rfc-editor.org/rfc/rfc9999.html#s-2.3"&gt;
      the protocol overview&lt;/a&gt;
      for more information.
</artwork>
      </figure>
   Note that the URL in the above example might be different when the RFC Editor deploys the v3 format.
   </t>
   <t/>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>annotation</x:ref>&gt; (<xref target="element.annotation"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>cref</x:ref>&gt; (<xref target="element.cref"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>dt</x:ref>&gt; (<xref target="element.dt"/>), &lt;<x:ref>em</x:ref>&gt; (<xref target="element.em"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>name</x:ref>&gt; (<xref target="element.name"/>), &lt;<x:ref>preamble</x:ref>&gt; (<xref target="element.preamble"/>), &lt;<x:ref>strong</x:ref>&gt; (<xref target="element.strong"/>), &lt;<x:ref>sub</x:ref>&gt; (<xref target="element.sub"/>), &lt;<x:ref>sup</x:ref>&gt; (<xref target="element.sup"/>), &lt;<x:ref>t</x:ref>&gt; (<xref target="element.t"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>), and &lt;<x:ref>tt</x:ref>&gt; (<xref target="element.tt"/>).</t>
   <t anchor="element.relref.contents"><!--AG-->
      <xref format="none" target="grammar.relref">Content model</xref>: only text content.</t>

   <!--relref/@displayFormat-->
   <section anchor="element.relref.attribute.displayFormat" toc="exclude">
      <name>"displayFormat" Attribute</name>
      <iref item="Attributes" subitem="displayFormat"/>
      <iref item="relref element" subitem="displayFormat attribute"/>
      <iref item="displayFormat attribute" subitem="in relref element"/>
      <t>
        This attribute is used to signal formatters what the desired format of the relative reference should be.
        Formatters for document types that have linking capability should wrap each part of the displayed text in hyperlinks.
        If there is content in the &lt;relref&gt; element, formatters will ignore the value of this attribute.
      </t>
      <t>
        "of"
        <list style="empty">
            <t>
            A formatter should display the relative reference as the word "Section" followed by a space, the contents of the "section" attribute
            followed by a space, the word "of", another space, and the value from the "target" attribute enclosed in square brackets.
            </t>
            <t>
            For example, with an input of:
<figure>
                  <artwork>
      See
      &lt;relref section="2.3" target="RFC9999" displayFormat="of"/&gt;
      for an overview.
</artwork>
               </figure>
            </t>
            <t>
               An HTML formatter might generate:
<figure>
                  <artwork>
      See
      &lt;a href="http://www.rfc-editor.org/info/rfc9999#s-2.3"&gt;
      Section 2.3&lt;/a&gt; of
      [&lt;a href="#RFC9999"&gt;RFC9999&lt;/a&gt;]
      for an overview.
</artwork>
               </figure>
            </t>
            <t>
            Note that "displayFormat='of'" is the default for &lt;relref&gt;, so it does not need to be given in
            a &lt;relref&gt; element if that format is desired.
            </t>
         </list>
      </t>
      <t>
        "comma"
        <list style="empty">
            <t>
            A formatter should display the relative reference as the value from the "target" attribute enclosed in square brackets,
            a comma, a space, the word "Section" followed by a space, and the "section" attribute.
            </t>
            <t>
            For example, with an input of:
<figure>
                  <artwork>
      See
      &lt;relref section="2.3" target="RFC9999" displayFormat="comma"/&gt;,
      for an overview.
</artwork>
               </figure>
            </t>
            <t>
               An HTML formatter might generate:
<figure>
                  <artwork>
      See
      [&lt;a href="#RFC9999"&gt;RFC9999&lt;/a&gt;], 
      &lt;a href="http://www.rfc-editor.org/info/rfc9999#s-2.3"&gt;
      Section 2.3&lt;/a&gt;, for an overview.
</artwork>
               </figure>
            </t>
         </list>
      </t>
      <t>
        "parens"
        <list style="empty">
            <t>
            A formatter should display the relative reference as the value from the "target" attribute enclosed in square brackets,
            a space, a left parenthesis, the word "Section" followed by a space, the "section" attribute, and a right parenthesis.
            </t>
            <t>
            For example, with an input of:
<figure>
                  <artwork>
      See
      &lt;relref section="2.3" target="RFC9999" displayFormat="parens"/&gt;
      for an overview.
</artwork>
               </figure>
            </t>
            <t>
               An HTML formatter might generate:
<figure>
                  <artwork>
      See
      [&lt;a href="#RFC9999"&gt;RFC9999&lt;/a&gt;]
      (&lt;a href="http://www.rfc-editor.org/info/rfc9999#s-2.3"&gt; 
      Section 2.3&lt;/a&gt;)
      for an overview.
</artwork>
               </figure>
            </t>
         </list>
      </t>
      <t>
        "bare"
        <list style="empty">
            <t>
            A formatter should display the relative reference as the contents of the "section" attribute
            and nothing else. This is useful when there are multiple relative references to a single base reference.
            </t>
            <t>
            For example:
<figure>
                  <artwork>
      See Sections
      &lt;relref section="2.3" target="RFC9999" displayFormat="bare"/&gt;
      and
      &lt;relref section="2.4" target="RFC9999" displayFormat="of"/&gt;
      for an overview.
</artwork>
               </figure>
            </t>
            <t>
               An HTML formatter might generate:
<figure>
                  <artwork>
      See Sections
      &lt;a href="http://www.rfc-editor.org/info/rfc9999#s-2.3"&gt;
      2.3&lt;/a&gt;
      and
      &lt;a href="http://www.rfc-editor.org/info/rfc9999#s-2.4"&gt;
      Section 2.4&lt;/a&gt; of
      [&lt;a href="#RFC9999"&gt;RFC9999&lt;/a&gt;]
      for an overview.
</artwork>
               </figure>
            </t>
         </list>
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"of" (default)</li>
         <li>"comma"</li>
         <li>"parens"</li>
         <li>"bare"</li>
      </ul>
   </section>

   <!--relref/@relative-->
   <section anchor="element.relref.attribute.relative" toc="exclude">
      <name>"relative" Attribute</name>
      <iref item="Attributes" subitem="relative"/>
      <iref item="relref element" subitem="relative attribute"/>
      <iref item="relative attribute" subitem="in relref element"/>
      <t>
         Specifies a relative reference from the URI in the target reference.
         This value must include whatever leading character is needed to create
         the relative reference; typically, this is "#" for HTML documents.
      </t>
   </section>

   <!--relref/@section-->
   <section anchor="element.relref.attribute.section" toc="exclude">
      <name>"section" Attribute <em> (Mandatory)</em>
      </name>
      <iref item="Attributes" subitem="section"/>
      <iref item="relref element" subitem="section attribute"/>
      <iref item="section attribute" subitem="in relref element"/>
      <t>
         Specifies a section of the target reference.
         If the reference is not an RFC or Internet-Draft in the v3 format, it is an error.
      </t>
   </section>

   <!--relref/@target-->
   <section anchor="element.relref.attribute.target" toc="exclude">
      <name>"target" Attribute <em> (Mandatory)</em>
      </name>
      <iref item="Attributes" subitem="target"/>
      <iref item="relref element" subitem="target attribute"/>
      <iref item="target attribute" subitem="in relref element"/>
      <t>
        The anchor of the reference for this element. If this value is not an anchor to a
        &lt;<x:ref>reference</x:ref>&gt; or &lt;<x:ref>referencegroup</x:ref>&gt; element, it is an error.
        If the reference at the target has no URI, it is an error.
      </t>
   </section>
</section>

<!--rfc-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.rfc">
   <name>
      <tt>&lt;rfc&gt;</tt>
   </name>
   <x:anchor-alias value="rfc"/>
   <iref item="Elements" subitem="rfc" primary="true"/>
   <iref item="rfc element" primary="true"/>
   <t>
      This is the root element of the xml2rfc vocabulary.
   </t>
   <t anchor="element.rfc.contents"><!--AG-->
      <xref format="none" target="grammar.rfc">Content model</xref>:</t>
   <t><!--AG-->In this order:</t>
   <ol><!--AG-->
        
      <li><!--AG-->
         <iref item="Elements" subitem="link"/>
         <iref item="link element" subitem="inside rfc"/>Optional &lt;<x:ref>link</x:ref>&gt; elements (<xref target="element.link"/>)</li>
      
      <li><!--AG-->
         <iref item="Elements" subitem="front"/>
         <iref item="front element" subitem="inside rfc"/>One &lt;<x:ref>front</x:ref>&gt; element (<xref target="element.front"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="middle"/>
         <iref item="middle element" subitem="inside rfc"/>One &lt;<x:ref>middle</x:ref>&gt; element (<xref target="element.middle"/>)</li>
        
      <li><!--AG-->
         <iref item="Elements" subitem="back"/>
         <iref item="back element" subitem="inside rfc"/>One optional &lt;<x:ref>back</x:ref>&gt; element (<xref target="element.back"/>)</li>
      
   </ol>

   <!--rfc/@category-->
   <section anchor="element.rfc.attribute.category" toc="exclude">
      <name>"category" Attribute</name>
      <iref item="Attributes" subitem="category"/>
      <iref item="rfc element" subitem="category attribute"/>
      <iref item="category attribute" subitem="in rfc element"/>
      <t>
            Deprecated; instead, use the "name" attribute in &lt;<x:ref>seriesInfo</x:ref>&gt;.
      </t>
   </section>

   <!--rfc/@consensus-->
   <section anchor="element.rfc.attribute.consensus" toc="exclude">
      <name>"consensus" Attribute</name>
      <iref item="Attributes" subitem="consensus"/>
      <iref item="rfc element" subitem="consensus attribute"/>
      <iref item="consensus attribute" subitem="in rfc element"/>
      <t>
            Affects the generated boilerplate. Note that the values of "no" and "yes" are deprecated and are
            replaced by "false" (the default) and "true".
      </t>
      <t>
            See <xref target="RFC7841"/> for more information.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"no"</li>
         <li>"yes"</li>
         <li>"false" (default)</li>
         <li>"true"</li>
      </ul>
   </section>

   <!--rfc/@docName-->
   <section anchor="element.rfc.attribute.docName" toc="exclude">
      <name>"docName" Attribute</name>
      <iref item="Attributes" subitem="docName"/>
      <iref item="rfc element" subitem="docName attribute"/>
      <iref item="docName attribute" subitem="in rfc element"/>
      <t>
            Deprecated; instead, use the "value" attribute in &lt;<x:ref>seriesInfo</x:ref>&gt;.
      </t>
   </section>

   <!--rfc/@indexInclude-->
   <section anchor="element.rfc.attribute.indexInclude" toc="exclude">
      <name>"indexInclude" Attribute</name>
      <iref item="Attributes" subitem="indexInclude"/>
      <iref item="rfc element" subitem="indexInclude attribute"/>
      <iref item="indexInclude attribute" subitem="in rfc element"/>
      <t>
         Specifies whether or not a formatter is requested to include an index in generated files.
         If the source file has no &lt;<x:ref>iref</x:ref>&gt; elements, an index is
         never generated. This option is useful for generating documents where the
         source document has &lt;<x:ref>iref</x:ref>&gt; elements but the author no longer
         wants an index. 
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"true" (default)</li>
         <li>"false"</li>
      </ul>
   </section>

   <!--rfc/@ipr-->
   <section anchor="element.rfc.attribute.ipr" toc="exclude">
      <name>"ipr" Attribute</name>
      <iref item="Attributes" subitem="ipr"/>
      <iref item="rfc element" subitem="ipr attribute"/>
      <iref item="ipr attribute" subitem="in rfc element"/>
      <t>
            Represents the Intellectual Property status of the document.
            See <xref target="attribute-ipr"/> for details.
         </t>
   </section>

   <!--rfc/@iprExtract-->
   <section anchor="element.rfc.attribute.iprExtract" toc="exclude">
      <name>"iprExtract" Attribute</name>
      <iref item="Attributes" subitem="iprExtract"/>
      <iref item="rfc element" subitem="iprExtract attribute"/>
      <iref item="iprExtract attribute" subitem="in rfc element"/>
      <t>
            Identifies a single section within the document for which extraction "as is"
            is explicitly allowed (only relevant for historic values of the "ipr"
            attribute).
      </t>
   </section>

   <!--rfc/@number-->
   <section anchor="element.rfc.attribute.number" toc="exclude">
      <name>"number" Attribute</name>
      <iref item="Attributes" subitem="number"/>
      <iref item="rfc element" subitem="number attribute"/>
      <iref item="number attribute" subitem="in rfc element"/>
      <t>
            Deprecated; instead, use the "value" attribute in &lt;<x:ref>seriesInfo</x:ref>&gt;.
      </t>
   </section>

   <!--rfc/@obsoletes-->
   <section anchor="element.rfc.attribute.obsoletes" toc="exclude">
      <name>"obsoletes" Attribute</name>
      <iref item="Attributes" subitem="obsoletes"/>
      <iref item="rfc element" subitem="obsoletes attribute"/>
      <iref item="obsoletes attribute" subitem="in rfc element"/>
      <t>
            A comma-separated list of RFC numbers or
            Internet-Draft names.
         </t>
      <t>
            The prep tool will parse the attribute value so that incorrect
            references can be detected.
      </t>
   </section>

   <!--rfc/@prepTime-->
   <section anchor="element.rfc.attribute.prepTime" toc="exclude">
      <name>"prepTime" Attribute</name>
      <iref item="Attributes" subitem="prepTime"/>
      <iref item="rfc element" subitem="prepTime attribute"/>
      <iref item="prepTime attribute" subitem="in rfc element"/>
      <t>
         The date that the XML was processed by a prep tool.
         This is included in the XML file just before it is saved to disk.
         The value is formatted using the "date-time" format defined in <xref target="RFC3339" x:fmt="of" x:sec="5.6"/>.
         The "time-offset" should be "Z".
      </t>
   </section>

   <!--rfc/@seriesNo-->
   <section anchor="element.rfc.attribute.seriesNo" toc="exclude">
      <name>"seriesNo" Attribute</name>
      <iref item="Attributes" subitem="seriesNo"/>
      <iref item="rfc element" subitem="seriesNo attribute"/>
      <iref item="seriesNo attribute" subitem="in rfc element"/>
      <t>
            Deprecated; instead, use the "value" attribute in &lt;<x:ref>seriesInfo</x:ref>&gt;.
         </t>
   </section>

   <!--rfc/@sortRefs-->
   <section anchor="element.rfc.attribute.sortRefs" toc="exclude">
      <name>"sortRefs" Attribute</name>
      <iref item="Attributes" subitem="sortRefs"/>
      <iref item="rfc element" subitem="sortRefs attribute"/>
      <iref item="sortRefs attribute" subitem="in rfc element"/>
      <t>
         Specifies whether or not the prep tool will sort the references in each reference section.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"true"</li>
         <li>"false" (default)</li>
      </ul>
   </section>

   <!--rfc/@submissionType-->
   <section anchor="element.rfc.attribute.submissionType" toc="exclude">
      <name>"submissionType" Attribute</name>
      <iref item="Attributes" subitem="submissionType"/>
      <iref item="rfc element" subitem="submissionType attribute"/>
      <iref item="submissionType attribute" subitem="in rfc element"/>
      <t>
            The document stream, as described in <xref target="RFC7841"/>.
            (The RFC Series Editor may change the list of allowed values in the future.)
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"IETF" (default)</li>
         <li>"IAB"</li>
         <li>"IRTF"</li>
         <li>"independent"</li>
      </ul>
   </section>

   <!--rfc/@symRefs-->
   <section anchor="element.rfc.attribute.symRefs" toc="exclude">
      <name>"symRefs" Attribute</name>
      <iref item="Attributes" subitem="symRefs"/>
      <iref item="rfc element" subitem="symRefs attribute"/>
      <iref item="symRefs attribute" subitem="in rfc element"/>
      <t>
         Specifies whether or not a formatter is requested to use symbolic references (such as "[RFC2119]"). If the
         value for this is "false", the references come out as numbers (such as "[3]").
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"true" (default)</li>
         <li>"false"</li>
      </ul>
   </section>

   <!--rfc/@tocDepth-->
   <section anchor="element.rfc.attribute.tocDepth" toc="exclude">
      <name>"tocDepth" Attribute</name>
      <iref item="Attributes" subitem="tocDepth"/>
      <iref item="rfc element" subitem="tocDepth attribute"/>
      <iref item="tocDepth attribute" subitem="in rfc element"/>
      <t>
         Specifies the number of levels of headings that a formatter is requested to include in the table of contents; the default is "3".
      </t>
   </section>

   <!--rfc/@tocInclude-->
   <section anchor="element.rfc.attribute.tocInclude" toc="exclude">
      <name>"tocInclude" Attribute</name>
      <iref item="Attributes" subitem="tocInclude"/>
      <iref item="rfc element" subitem="tocInclude attribute"/>
      <iref item="tocInclude attribute" subitem="in rfc element"/>
      <t>
         Specifies whether or not a formatter is requested to include a table of contents in generated files.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"true" (default)</li>
         <li>"false"</li>
      </ul>
   </section>

   <!--rfc/@updates-->
   <section anchor="element.rfc.attribute.updates" toc="exclude">
      <name>"updates" Attribute</name>
      <iref item="Attributes" subitem="updates"/>
      <iref item="rfc element" subitem="updates attribute"/>
      <iref item="updates attribute" subitem="in rfc element"/>
      <t>
            A comma-separated list of RFC numbers or
            Internet-Draft names.
         </t>
      <t>
            The prep tool will parse the attribute value so that incorrect
            references can be detected.
      </t>
   </section>

   <!--rfc/@version-->
   <section anchor="element.rfc.attribute.version" toc="exclude">
      <name>"version" Attribute</name>
      <iref item="Attributes" subitem="version"/>
      <iref item="rfc element" subitem="version attribute"/>
      <iref item="version attribute" subitem="in rfc element"/>
      <t>
         Specifies the version of xml2rfc syntax used in this document. The only expected value (for now) is "3".
      </t>
   </section>
</section>

<!--section-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.section">
   <name>
      <tt>&lt;section&gt;</tt>
   </name>
   <x:anchor-alias value="section"/>
   <iref item="Elements" subitem="section" primary="true"/>
   <iref item="section element" primary="true"/>
   <t>
      Represents a section (when inside a &lt;middle&gt; element) or an appendix (when inside a
      &lt;back&gt; element).
   </t>
   <t>
      Subsections are created by nesting &lt;section&gt; elements inside &lt;section&gt; elements.
      Sections are allowed to be empty.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>back</x:ref>&gt; (<xref target="element.back"/>), &lt;<x:ref>boilerplate</x:ref>&gt; (<xref target="element.boilerplate"/>), &lt;<x:ref>middle</x:ref>&gt; (<xref target="element.middle"/>), and &lt;<x:ref>section</x:ref>&gt; (<xref target="element.section"/>).</t>
   <t anchor="element.section.contents"><!--AG-->
      <xref format="none" target="grammar.section">Content model</xref>:</t>
   <t><!--AG-->In this order:</t>
   <ol><!--AG-->
        
      <li><!--AG-->
         <iref item="Elements" subitem="name"/>
         <iref item="name element" subitem="inside section"/>One optional &lt;<x:ref>name</x:ref>&gt; element (<xref target="element.name"/>)</li>
      
      <li><!--AG-->
         <t>In any order:</t>
         <ul><!--AG-->
            <li><!--AG-->
               <iref item="Elements" subitem="artwork"/>
               <iref item="artwork element" subitem="inside section"/>&lt;<x:ref>artwork</x:ref>&gt; elements (<xref target="element.artwork"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="aside"/>
               <iref item="aside element" subitem="inside section"/>&lt;<x:ref>aside</x:ref>&gt; elements (<xref target="element.aside"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="blockquote"/>
               <iref item="blockquote element" subitem="inside section"/>&lt;<x:ref>blockquote</x:ref>&gt; elements (<xref target="element.blockquote"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="dl"/>
               <iref item="dl element" subitem="inside section"/>&lt;<x:ref>dl</x:ref>&gt; elements (<xref target="element.dl"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="figure"/>
               <iref item="figure element" subitem="inside section"/>&lt;<x:ref>figure</x:ref>&gt; elements (<xref target="element.figure"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="iref"/>
               <iref item="iref element" subitem="inside section"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ol"/>
               <iref item="ol element" subitem="inside section"/>&lt;<x:ref>ol</x:ref>&gt; elements (<xref target="element.ol"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sourcecode"/>
               <iref item="sourcecode element" subitem="inside section"/>&lt;<x:ref>sourcecode</x:ref>&gt; elements (<xref target="element.sourcecode"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="t"/>
               <iref item="t element" subitem="inside section"/>&lt;<x:ref>t</x:ref>&gt; elements (<xref target="element.t"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="table"/>
               <iref item="table element" subitem="inside section"/>&lt;<x:ref>table</x:ref>&gt; elements (<xref target="element.table"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="texttable"/>
               <iref item="texttable element" subitem="inside section"/>&lt;<x:ref>texttable</x:ref>&gt; elements (<xref target="element.texttable"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ul"/>
               <iref item="ul element" subitem="inside section"/>&lt;<x:ref>ul</x:ref>&gt; elements (<xref target="element.ul"/>)</li>
         </ul>
      </li>
        
      <li><!--AG-->
         <iref item="Elements" subitem="section"/>
         <iref item="section element" subitem="inside section"/>Optional &lt;<x:ref>section</x:ref>&gt; elements (<xref target="element.section"/>)</li>
      
   </ol>

   <!--section/@anchor-->
   <section anchor="element.section.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="section element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in section element"/>
      <t>
        Document-wide unique identifier for this section.
      </t>
   </section>

   <!--section/@numbered-->
   <section anchor="element.section.attribute.numbered" toc="exclude">
      <name>"numbered" Attribute</name>
      <iref item="Attributes" subitem="numbered"/>
      <iref item="section element" subitem="numbered attribute"/>
      <iref item="numbered attribute" subitem="in section element"/>
      <t>
         If set to "false", the formatter is requested to not display a section number. The prep tool will verify that such a
         section is not followed by a numbered section in this part of the document and will verify that the section is a
         top-level section.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"true" (default)</li>
         <li>"false"</li>
      </ul>
   </section>

   <!--section/@removeInRFC-->
   <section anchor="element.section.attribute.removeInRFC" toc="exclude">
      <name>"removeInRFC" Attribute</name>
      <iref item="Attributes" subitem="removeInRFC"/>
      <iref item="section element" subitem="removeInRFC attribute"/>
      <iref item="removeInRFC attribute" subitem="in section element"/>
      <t>
         If set to "true", this note is marked in the prep tool with text indicating that it should be
         removed before the document is published as an RFC.
         That text will be "This note is to be removed before publishing as an RFC."
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"true"</li>
         <li>"false" (default)</li>
      </ul>
   </section>

   <!--section/@title-->
   <section anchor="element.section.attribute.title" toc="exclude">
      <name>"title" Attribute</name>
      <iref item="Attributes" subitem="title"/>
      <iref item="section element" subitem="title attribute"/>
      <iref item="title attribute" subitem="in section element"/>
      <t>
         Deprecated. Use &lt;<x:ref>name</x:ref>&gt; instead. 
      </t>
   </section>

   <!--section/@toc-->
   <section anchor="element.section.attribute.toc" toc="exclude">
      <name>"toc" Attribute</name>
      <iref item="Attributes" subitem="toc"/>
      <iref item="section element" subitem="toc attribute"/>
      <iref item="toc attribute" subitem="in section element"/>
      <t>
            Indicates to a formatter whether or not the section is to be included in a
            table of contents, if such a table of contents is produced. This only takes effect if the level of the section would have
            appeared in the table of contents based on the "tocDepth" attribute of the
            &lt;<x:ref>rfc</x:ref>&gt; element, and of course only if the table of contents
            is being created based on the "tocInclude" attribute of the
            &lt;<x:ref>rfc</x:ref>&gt; element. If this is set to "exclude", any section
            below this one will be excluded as well. The "default" value indicates
            inclusion of the section if it would be included by the tocDepth attribute of the
            &lt;<x:ref>rfc</x:ref>&gt; element.
         </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"include"</li>
         <li>"exclude"</li>
         <li>"default" (default)</li>
      </ul>
   </section>
</section>

<!--seriesInfo-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.seriesInfo">
   <name>
      <tt>&lt;seriesInfo&gt;</tt>
   </name>
   <x:anchor-alias value="seriesInfo"/>
   <iref item="Elements" subitem="seriesInfo" primary="true"/>
   <iref item="seriesInfo element" primary="true"/>
   <t>
      Specifies the document series in which this document appears, and also
      specifies an identifier within that series.
   </t>
   <t>
      A processing tool determines whether it is working on an RFC or an Internet-Draft by inspecting the
      "name" attribute of a &lt;<x:ref>seriesInfo</x:ref>&gt; element inside the
      &lt;<x:ref>front</x:ref>&gt; element inside the &lt;<x:ref>rfc</x:ref>&gt; element, looking
      for "RFC" or "Internet-Draft". (Specifying neither value in any of the
      &lt;<x:ref>seriesInfo</x:ref>&gt; elements can be useful for producing other types of
      documents but is out of scope for this specification.)
   </t>
   <t>
It is invalid to have multiple &lt;<x:ref>seriesInfo</x:ref>&gt; elements inside the same &lt;<x:ref>front</x:ref>&gt;
element containing the same "name" value.  Some combinations of &lt;<x:ref>seriesInfo</x:ref>&gt; "name" attribute values
make no sense, such as having both &lt;seriesInfo name="rfc"/&gt; and &lt;seriesInfo name="Internet-Draft"/&gt;
in the same &lt;front&gt; element.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>front</x:ref>&gt; (<xref target="element.front"/>) and &lt;<x:ref>reference</x:ref>&gt; (<xref target="element.reference"/>; deprecated in this context).</t>
   <t anchor="element.seriesInfo.contents"><!--AG-->
      <xref format="none" target="grammar.seriesInfo">Content model</xref>: this element does not have any contents.</t>

   <!--seriesInfo/@asciiName-->
   <section anchor="element.seriesInfo.attribute.asciiName" toc="exclude">
      <name>"asciiName" Attribute</name>
      <iref item="Attributes" subitem="asciiName"/>
      <iref item="seriesInfo element" subitem="asciiName attribute"/>
      <iref item="asciiName attribute" subitem="in seriesInfo element"/>
      <t>
         The ASCII equivalent of the name field.
      </t>
   </section>

   <!--seriesInfo/@asciiValue-->
   <section anchor="element.seriesInfo.attribute.asciiValue" toc="exclude">
      <name>"asciiValue" Attribute</name>
      <iref item="Attributes" subitem="asciiValue"/>
      <iref item="seriesInfo element" subitem="asciiValue attribute"/>
      <iref item="asciiValue attribute" subitem="in seriesInfo element"/>
      <t>
         The ASCII equivalent of the value field.
      </t>
   </section>

   <!--seriesInfo/@name-->
   <section anchor="element.seriesInfo.attribute.name" toc="exclude">
      <name>"name" Attribute <em> (Mandatory)</em>
      </name>
      <iref item="Attributes" subitem="name"/>
      <iref item="seriesInfo element" subitem="name attribute"/>
      <iref item="name attribute" subitem="in seriesInfo element"/>
      <t>
            The name of the series. The currently known values are "RFC", "Internet-Draft",
            and "DOI". The RFC Series Editor
            may change this list in the future.
      </t>
      <t>
            Some of the values for "name" interact as follows:
      </t>
      <t>
         <list style="symbols">
            <t>
         If a &lt;<x:ref>front</x:ref>&gt; element contains a &lt;<x:ref>seriesInfo</x:ref>&gt;
         element with a name of "Internet-Draft", it can also have at most one additional
         &lt;<x:ref>seriesInfo</x:ref>&gt; element with a "status" attribute whose value is of
         "standard", "full-standard", "bcp", "fyi", "informational", "experimental", or
         "historic" to indicate the intended status of this Internet-Draft, if it were to be later
         published as an RFC. If such an additional &lt;<x:ref>seriesInfo</x:ref>&gt; element has
         one of those statuses, the name needs to be "".
      </t>
            <t>
        If a &lt;<x:ref>front</x:ref>&gt; element contains a &lt;<x:ref>seriesInfo</x:ref>&gt;
        element with a name of "RFC", it can also have at most one additional
        &lt;<x:ref>seriesInfo</x:ref>&gt; element with a "status" attribute whose value is of "full-standard", "bcp", or "fyi" to indicate
        the current status of this RFC. If such an additional &lt;<x:ref>seriesInfo</x:ref>&gt;
        element has one of those statuses, the "value" attribute for that name needs to be the number within
        that series. That &lt;<x:ref>front</x:ref>&gt; element might also contain an additional
        &lt;<x:ref>seriesInfo</x:ref>&gt; element with the status of "info", "exp", or "historic" and a name of "" to
        indicate the status of the RFC.
      </t>
            <t>
         A &lt;<x:ref>front</x:ref>&gt; element that has a &lt;<x:ref>seriesInfo</x:ref>&gt; element
         that has the name "Internet-Draft" cannot also have a &lt;<x:ref>seriesInfo</x:ref>&gt;
         element that has the name "RFC". 
      </t>
            <t>
         The &lt;<x:ref>seriesInfo</x:ref>&gt; element can contain the DOI for the referenced document.
         This cannot be used when the &lt;<x:ref>seriesInfo</x:ref>&gt;
         element is an eventual child element of an &lt;<x:ref>rfc</x:ref>&gt; element --
         only as an eventual child of a &lt;<x:ref>reference</x:ref>&gt; element.
         The "value" attribute should use the form specified in <xref target="RFC7669"/>.
      </t>
         </list>
      </t>
   </section>

   <!--seriesInfo/@status-->
   <section anchor="element.seriesInfo.attribute.status" toc="exclude">
      <name>"status" Attribute</name>
      <iref item="Attributes" subitem="status"/>
      <iref item="seriesInfo element" subitem="status attribute"/>
      <iref item="status attribute" subitem="in seriesInfo element"/>
      <t>
         The status of this document. The currently known values are "standard", "informational", "experimental", "bcp", "fyi", and "full-standard".
         The RFC Series Editor may change this list in the future.
      </t>
   </section>

   <!--seriesInfo/@stream-->
   <section anchor="element.seriesInfo.attribute.stream" toc="exclude">
      <name>"stream" Attribute</name>
      <iref item="Attributes" subitem="stream"/>
      <iref item="seriesInfo element" subitem="stream attribute"/>
      <iref item="stream attribute" subitem="in seriesInfo element"/>
      <t>
         The stream (as described in <xref target="RFC7841"/>) that originated the document.
         (The RFC Series Editor may change this list in the future.)
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"IETF" (default)</li>
         <li>"IAB"</li>
         <li>"IRTF"</li>
         <li>"independent"</li>
      </ul>
   </section>

   <!--seriesInfo/@value-->
   <section anchor="element.seriesInfo.attribute.value" toc="exclude">
      <name>"value" Attribute <em> (Mandatory)</em>
      </name>
      <iref item="Attributes" subitem="value"/>
      <iref item="seriesInfo element" subitem="value attribute"/>
      <iref item="value attribute" subitem="in seriesInfo element"/>
      <t>
            The identifier within the series specified by the "name" attribute.
      </t>
      <t>
            For BCPs, FYIs, RFCs, and STDs, this is the number within the series.
            For Internet-Drafts, it is the full draft name (ending with the two-digit
            version number). For DOIs, the value is given, such as "10.17487/rfc1149",
            as described in <xref target="RFC7669"/>.
      </t>
      <t>
            The name in the value should be the document name without any file
            extension. For Internet-Drafts, the value for this attribute should
            be "draft-ietf-somewg-someprotocol-07", not
            "draft-ietf-somewg-someprotocol-07.txt".
      </t>
   </section>
</section>

<!--sourcecode-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.sourcecode">
   <name>
      <tt>&lt;sourcecode&gt;</tt>
   </name>
   <x:anchor-alias value="sourcecode"/>
   <iref item="Elements" subitem="sourcecode" primary="true"/>
   <iref item="sourcecode element" primary="true"/>
   <t>
      This element allows the inclusion of source code into the document.
   </t>
   <t>
      When rendered, source code is always shown in a monospace font.
      When &lt;sourcecode&gt; is a child of &lt;<x:ref>figure</x:ref>&gt; or &lt;<x:ref>section</x:ref>&gt;, it provides
      full control of horizontal whitespace and line breaks.
      When formatted, it is indented relative to the left margin of the enclosing element.
      It is thus useful for source code and formal languages (such as ABNF <xref target="RFC5234"/> or the RNC notation used in this document).
      (When &lt;sourcecode&gt; is a child of other elements, it flows with the text that surrounds it.)
      Tab characters (U+0009) inside of this element are prohibited.

   </t>
   <t>
      For artwork such as character-based art, diagrams of message layouts, and so on,
      use the &lt;<x:ref>artwork</x:ref>&gt; element instead.
   </t>
   <t>
      Output formatters that do pagination should attempt to keep source code on a single page. This is to prevent
      source code that is split across pages from looking like two separate pieces of code.
   </t>
   <t>
See <xref target="cdata.and.escaping"/> for a description of how to deal with issues of using
"&amp;" and "&lt;" characters in source code.
</t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>figure</x:ref>&gt; (<xref target="element.figure"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>section</x:ref>&gt; (<xref target="element.section"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), and &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>).</t>
   <t anchor="element.sourcecode.contents"><!--AG-->
      <xref format="none" target="grammar.sourcecode">Content model</xref>: only text content.</t>

   <!--sourcecode/@anchor-->
   <section anchor="element.sourcecode.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="sourcecode element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in sourcecode element"/>
      <t>
        Document-wide unique identifier for this source code.
      </t>
   </section>

   <!--sourcecode/@name-->
   <section anchor="element.sourcecode.attribute.name" toc="exclude">
      <name>"name" Attribute</name>
      <iref item="Attributes" subitem="name"/>
      <iref item="sourcecode element" subitem="name attribute"/>
      <iref item="name attribute" subitem="in sourcecode element"/>
      <t>
            A filename suitable for the contents (such as for extraction to a local file).
            This attribute can
            be helpful for other kinds of tools (such as automated syntax checkers,
            which work by extracting the source code).
            Note that the "name" attribute does not need to be unique for &lt;<x:ref>artwork</x:ref>&gt; elements in a
            document. If multiple &lt;<x:ref>sourcecode</x:ref>&gt; elements have the same "name" attribute, a formatter might
            assume that the elements are all fragments of a single file, and such a formatter can
            collect those fragments for later processing.
         </t>
   </section>

   <!--sourcecode/@src-->
   <section anchor="element.sourcecode.attribute.src" toc="exclude">
      <name>"src" Attribute</name>
      <iref item="Attributes" subitem="src"/>
      <iref item="sourcecode element" subitem="src attribute"/>
      <iref item="src attribute" subitem="in sourcecode element"/>
      <t>
         The URI reference of a source file <xref target="RFC3986"/>.
      </t>
      <t>
         It is an error to have both a "src" attribute and content in the &lt;sourcecode&gt; element.
      </t>
   </section>

   <!--sourcecode/@type-->
   <section anchor="element.sourcecode.attribute.type" toc="exclude">
      <name>"type" Attribute</name>
      <iref item="Attributes" subitem="type"/>
      <iref item="sourcecode element" subitem="type attribute"/>
      <iref item="type attribute" subitem="in sourcecode element"/>
      <t>
            Specifies the type of the source code. The value of this attribute is free text with
            certain values designated as preferred.
      </t>
      <t>
            The preferred values for &lt;sourcecode&gt; types are:
            <list style="symbols">
            <t>abnf</t>
            <t>asn.1</t>
            <t>bash</t>
            <t>c++</t>
            <t>c</t>
            <t>cbor</t>
            <t>dtd</t>
            <t>java</t>
            <t>javascript</t>
            <t>json</t>
            <t>mib</t>
            <t>perl</t>
            <t>pseudocode</t>
            <t>python</t>
            <t>rnc</t>
            <t>xml</t>
            <t>yang</t>
         </list>
            The RFC Series Editor will maintain a complete list of the preferred values on the RFC Editor
            web site, and that list is expected to be updated over time. Thus, a consumer
            of v3 XML should not cause a failure when it encounters an unexpected type or no type is specified. 
         </t>
   </section>
</section>

<!--street-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.street">
   <name>
      <tt>&lt;street&gt;</tt>
   </name>
   <x:anchor-alias value="street"/>
   <iref item="Elements" subitem="street" primary="true"/>
   <iref item="street element" primary="true"/>
   <t>
      Provides a street address.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>postal</x:ref>&gt; (<xref target="element.postal"/>).</t>
   <t anchor="element.street.contents"><!--AG-->
      <xref format="none" target="grammar.street">Content model</xref>: only text content.</t>

   <!--street/@ascii-->
   <section anchor="element.street.attribute.ascii" toc="exclude">
      <name>"ascii" Attribute</name>
      <iref item="Attributes" subitem="ascii"/>
      <iref item="street element" subitem="ascii attribute"/>
      <iref item="ascii attribute" subitem="in street element"/>
      <t>
         The ASCII equivalent of the street address.
      </t>
   </section>
</section>

<!--strong-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.strong">
   <name>
      <tt>&lt;strong&gt;</tt>
   </name>
   <x:anchor-alias value="strong"/>
   <iref item="Elements" subitem="strong" primary="true"/>
   <iref item="strong element" primary="true"/>
   <t>
        Indicates text that is semantically strong. Text enclosed within this element will be displayed as bold after processing.
        This element can be combined with other character formatting elements, and the
        formatting will be additive.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>annotation</x:ref>&gt; (<xref target="element.annotation"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>cref</x:ref>&gt; (<xref target="element.cref"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>dt</x:ref>&gt; (<xref target="element.dt"/>), &lt;<x:ref>em</x:ref>&gt; (<xref target="element.em"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>preamble</x:ref>&gt; (<xref target="element.preamble"/>), &lt;<x:ref>refcontent</x:ref>&gt; (<xref target="element.refcontent"/>), &lt;<x:ref>sub</x:ref>&gt; (<xref target="element.sub"/>), &lt;<x:ref>sup</x:ref>&gt; (<xref target="element.sup"/>), &lt;<x:ref>t</x:ref>&gt; (<xref target="element.t"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>), and &lt;<x:ref>tt</x:ref>&gt; (<xref target="element.tt"/>).</t>
   <t anchor="element.strong.contents"><!--AG-->
      <xref format="none" target="grammar.strong">Content model</xref>:
    </t>
   <t><!--AG-->In any order:</t>
   <ul><!--AG-->
      <li><!--AG-->Text</li>
      <li><!--AG-->
         <iref item="Elements" subitem="bcp14"/>
         <iref item="bcp14 element" subitem="inside strong"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="cref"/>
         <iref item="cref element" subitem="inside strong"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="em"/>
         <iref item="em element" subitem="inside strong"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="eref"/>
         <iref item="eref element" subitem="inside strong"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="iref"/>
         <iref item="iref element" subitem="inside strong"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="relref"/>
         <iref item="relref element" subitem="inside strong"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sub"/>
         <iref item="sub element" subitem="inside strong"/>&lt;<x:ref>sub</x:ref>&gt; elements (<xref target="element.sub"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sup"/>
         <iref item="sup element" subitem="inside strong"/>&lt;<x:ref>sup</x:ref>&gt; elements (<xref target="element.sup"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="tt"/>
         <iref item="tt element" subitem="inside strong"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="xref"/>
         <iref item="xref element" subitem="inside strong"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
   </ul>
</section>

<!--sub-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.sub">
   <name>
      <tt>&lt;sub&gt;</tt>
   </name>
   <x:anchor-alias value="sub"/>
   <iref item="Elements" subitem="sub" primary="true"/>
   <iref item="sub element" primary="true"/>
   <t>
        Causes the text to be displayed as subscript, approximately half a letter-height lower than normal text.
        This element can be combined with other character formatting elements, and the
        formatting will be additive.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>annotation</x:ref>&gt; (<xref target="element.annotation"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>cref</x:ref>&gt; (<xref target="element.cref"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>dt</x:ref>&gt; (<xref target="element.dt"/>), &lt;<x:ref>em</x:ref>&gt; (<xref target="element.em"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>preamble</x:ref>&gt; (<xref target="element.preamble"/>), &lt;<x:ref>refcontent</x:ref>&gt; (<xref target="element.refcontent"/>), &lt;<x:ref>strong</x:ref>&gt; (<xref target="element.strong"/>), &lt;<x:ref>t</x:ref>&gt; (<xref target="element.t"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>), and &lt;<x:ref>tt</x:ref>&gt; (<xref target="element.tt"/>).</t>
   <t anchor="element.sub.contents"><!--AG-->
      <xref format="none" target="grammar.sub">Content model</xref>:
    </t>
   <t><!--AG-->In any order:</t>
   <ul><!--AG-->
      <li><!--AG-->Text</li>
      <li><!--AG-->
         <iref item="Elements" subitem="bcp14"/>
         <iref item="bcp14 element" subitem="inside sub"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="cref"/>
         <iref item="cref element" subitem="inside sub"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="em"/>
         <iref item="em element" subitem="inside sub"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="eref"/>
         <iref item="eref element" subitem="inside sub"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="iref"/>
         <iref item="iref element" subitem="inside sub"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="relref"/>
         <iref item="relref element" subitem="inside sub"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="strong"/>
         <iref item="strong element" subitem="inside sub"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="tt"/>
         <iref item="tt element" subitem="inside sub"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="xref"/>
         <iref item="xref element" subitem="inside sub"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
   </ul>
</section>

<!--sup-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.sup">
   <name>
      <tt>&lt;sup&gt;</tt>
   </name>
   <x:anchor-alias value="sup"/>
   <iref item="Elements" subitem="sup" primary="true"/>
   <iref item="sup element" primary="true"/>
   <t>
        Causes the text to be displayed as superscript, approximately half a letter-height higher than normal text.
        This element can be combined with other character formatting elements, and the
        formatting will be additive.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>annotation</x:ref>&gt; (<xref target="element.annotation"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>cref</x:ref>&gt; (<xref target="element.cref"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>dt</x:ref>&gt; (<xref target="element.dt"/>), &lt;<x:ref>em</x:ref>&gt; (<xref target="element.em"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>preamble</x:ref>&gt; (<xref target="element.preamble"/>), &lt;<x:ref>refcontent</x:ref>&gt; (<xref target="element.refcontent"/>), &lt;<x:ref>strong</x:ref>&gt; (<xref target="element.strong"/>), &lt;<x:ref>t</x:ref>&gt; (<xref target="element.t"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>), and &lt;<x:ref>tt</x:ref>&gt; (<xref target="element.tt"/>).</t>
   <t anchor="element.sup.contents"><!--AG-->
      <xref format="none" target="grammar.sup">Content model</xref>:
    </t>
   <t><!--AG-->In any order:</t>
   <ul><!--AG-->
      <li><!--AG-->Text</li>
      <li><!--AG-->
         <iref item="Elements" subitem="bcp14"/>
         <iref item="bcp14 element" subitem="inside sup"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="cref"/>
         <iref item="cref element" subitem="inside sup"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="em"/>
         <iref item="em element" subitem="inside sup"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="eref"/>
         <iref item="eref element" subitem="inside sup"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="iref"/>
         <iref item="iref element" subitem="inside sup"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="relref"/>
         <iref item="relref element" subitem="inside sup"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="strong"/>
         <iref item="strong element" subitem="inside sup"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="tt"/>
         <iref item="tt element" subitem="inside sup"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="xref"/>
         <iref item="xref element" subitem="inside sup"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
   </ul>
</section>

<!--t-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.t">
   <name>
      <tt>&lt;t&gt;</tt>
   </name>
   <x:anchor-alias value="t"/>
   <iref item="Elements" subitem="t" primary="true"/>
   <iref item="t element" primary="true"/>
   <t>
      Contains a paragraph of text.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>abstract</x:ref>&gt; (<xref target="element.abstract"/>), &lt;<x:ref>aside</x:ref>&gt; (<xref target="element.aside"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>list</x:ref>&gt; (<xref target="element.list"/>), &lt;<x:ref>note</x:ref>&gt; (<xref target="element.note"/>), &lt;<x:ref>section</x:ref>&gt; (<xref target="element.section"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), and &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>).</t>
   <t anchor="element.t.contents"><!--AG-->
      <xref format="none" target="grammar.t">Content model</xref>:
    </t>
   <t><!--AG-->In any order:</t>
   <ul><!--AG-->
      <li><!--AG-->Text</li>
      <li><!--AG-->
         <iref item="Elements" subitem="bcp14"/>
         <iref item="bcp14 element" subitem="inside t"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="cref"/>
         <iref item="cref element" subitem="inside t"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="em"/>
         <iref item="em element" subitem="inside t"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="eref"/>
         <iref item="eref element" subitem="inside t"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="iref"/>
         <iref item="iref element" subitem="inside t"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="list"/>
         <iref item="list element" subitem="inside t"/>&lt;<x:ref>list</x:ref>&gt; elements (<xref target="element.list"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="relref"/>
         <iref item="relref element" subitem="inside t"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="spanx"/>
         <iref item="spanx element" subitem="inside t"/>&lt;<x:ref>spanx</x:ref>&gt; elements (<xref target="element.spanx"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="strong"/>
         <iref item="strong element" subitem="inside t"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sub"/>
         <iref item="sub element" subitem="inside t"/>&lt;<x:ref>sub</x:ref>&gt; elements (<xref target="element.sub"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sup"/>
         <iref item="sup element" subitem="inside t"/>&lt;<x:ref>sup</x:ref>&gt; elements (<xref target="element.sup"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="tt"/>
         <iref item="tt element" subitem="inside t"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="vspace"/>
         <iref item="vspace element" subitem="inside t"/>&lt;<x:ref>vspace</x:ref>&gt; elements (<xref target="element.vspace"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="xref"/>
         <iref item="xref element" subitem="inside t"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
   </ul>

   <!--t/@anchor-->
   <section anchor="element.t.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="t element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in t element"/>
      <t>
        Document-wide unique identifier for this paragraph.
      </t>
   </section>

   <!--t/@hangText-->
   <section anchor="element.t.attribute.hangText" toc="exclude">
      <name>"hangText" Attribute</name>
      <iref item="Attributes" subitem="hangText"/>
      <iref item="t element" subitem="hangText attribute"/>
      <iref item="hangText attribute" subitem="in t element"/>
      <t>
         Deprecated. Instead, use &lt;<x:ref>dd</x:ref>&gt; inside of a definition list (&lt;<x:ref>dl</x:ref>&gt;).
      </t>
   </section>

   <!--t/@keepWithNext-->
   <section anchor="element.t.attribute.keepWithNext" toc="exclude">
      <name>"keepWithNext" Attribute</name>
      <iref item="Attributes" subitem="keepWithNext"/>
      <iref item="t element" subitem="keepWithNext attribute"/>
      <iref item="keepWithNext attribute" subitem="in t element"/>
      <t>
         Acts as a hint to the output formatters that do pagination to do a best-effort attempt to
         keep the paragraph with the next element, whatever that happens to be.  For example, the
         HTML output @media print CSS ("CSS" refers to Cascading Style Sheets) might translate this to page-break-after: avoid.  For PDF, the
         paginator could attempt to keep the paragraph with the next element.  Note: this attribute
         is strictly a hint and not always actionable.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"false" (default)</li>
         <li>"true"</li>
      </ul>
   </section>

   <!--t/@keepWithPrevious-->
   <section anchor="element.t.attribute.keepWithPrevious" toc="exclude">
      <name>"keepWithPrevious" Attribute</name>
      <iref item="Attributes" subitem="keepWithPrevious"/>
      <iref item="t element" subitem="keepWithPrevious attribute"/>
      <iref item="keepWithPrevious attribute" subitem="in t element"/>
      <t>
         Acts as a hint to the output formatters that do pagination to do a best-effort attempt to
         keep the paragraph with the previous element, whatever that happens to be.  For example,
         the HTML output @media print CSS might translate this to page-break-before: avoid.  For
         PDF, the paginator could attempt to keep the paragraph with the previous element.  Note:
         this attribute is strictly a hint and not always actionable.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"false" (default)</li>
         <li>"true"</li>
      </ul>
   </section>
</section>

<!--table-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.table">
   <name>
      <tt>&lt;table&gt;</tt>
   </name>
   <x:anchor-alias value="table"/>
   <iref item="Elements" subitem="table" primary="true"/>
   <iref item="table element" primary="true"/>
   <t>
      Contains a table with a caption with the table number.
      If the element contains a &lt;<x:ref>name</x:ref>&gt; element, the caption will also show that name. 
   </t>
   <t>
      Inside the &lt;<x:ref>table</x:ref>&gt; element is, optionally, a &lt;<x:ref>thead</x:ref>&gt; element to
      contain the rows that will be the table's heading and, optionally, a &lt;<x:ref>tfoot</x:ref>&gt; element
      to contain the rows of the table's footer. If the XML is converted to a representation that has page
      breaks (such as PDFs or printed HTML), the header and footer are meant to appear on each page.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>aside</x:ref>&gt; (<xref target="element.aside"/>) and &lt;<x:ref>section</x:ref>&gt; (<xref target="element.section"/>).</t>
   <t anchor="element.table.contents"><!--AG-->
      <xref format="none" target="grammar.table">Content model</xref>:</t>
   <t><!--AG-->In this order:</t>
   <ol><!--AG-->
        
      <li><!--AG-->
         <iref item="Elements" subitem="name"/>
         <iref item="name element" subitem="inside table"/>One optional &lt;<x:ref>name</x:ref>&gt; element (<xref target="element.name"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="iref"/>
         <iref item="iref element" subitem="inside table"/>Optional &lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="thead"/>
         <iref item="thead element" subitem="inside table"/>One optional &lt;<x:ref>thead</x:ref>&gt; element (<xref target="element.thead"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="tbody"/>
         <iref item="tbody element" subitem="inside table"/>One or more &lt;<x:ref>tbody</x:ref>&gt; elements (<xref target="element.tbody"/>)</li>
      
        
      <li><!--AG-->
         <iref item="Elements" subitem="tfoot"/>
         <iref item="tfoot element" subitem="inside table"/>One optional &lt;<x:ref>tfoot</x:ref>&gt; element (<xref target="element.tfoot"/>)</li>
      
   </ol>

   <!--table/@anchor-->
   <section anchor="element.table.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="table element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in table element"/>
      <t>
        Document-wide unique identifier for this table.
      </t>
   </section>
</section>

<!--tbody-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.tbody">
   <name>
      <tt>&lt;tbody&gt;</tt>
   </name>
   <x:anchor-alias value="tbody"/>
   <iref item="Elements" subitem="tbody" primary="true"/>
   <iref item="tbody element" primary="true"/>
   <t>
      A container for a set of body rows for a table.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>table</x:ref>&gt; (<xref target="element.table"/>).</t>
   <t anchor="element.tbody.contents"><!--AG-->
      <xref format="none" target="grammar.tbody">Content model</xref>:
    </t>
        
   <t><!--AG-->
      <iref item="Elements" subitem="tr"/>
      <iref item="tr element" subitem="inside tbody"/>One or more &lt;<x:ref>tr</x:ref>&gt; elements (<xref target="element.tr"/>)</t>
      

   <!--tbody/@anchor-->
   <section anchor="element.tbody.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="tbody element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in tbody element"/>
      <t>
        Document-wide unique identifier for the tbody.
      </t>
   </section>
</section>

<!--td-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.td">
   <name>
      <tt>&lt;td&gt;</tt>
   </name>
   <x:anchor-alias value="td"/>
   <iref item="Elements" subitem="td" primary="true"/>
   <iref item="td element" primary="true"/>
   <t>
      A cell in a table row.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>tr</x:ref>&gt; (<xref target="element.tr"/>).</t>
   <t anchor="element.td.contents"><!--AG-->
      <xref format="none" target="grammar.td">Content model</xref>:
    </t>
   <t><!--AG-->Either:</t>
   <ul empty="true"><!--AG-->
      <li><!--AG-->
         <t>In any order, but at least one of:</t>
         <ul><!--AG-->
            <li><!--AG-->
               <iref item="Elements" subitem="artwork"/>
               <iref item="artwork element" subitem="inside td"/>&lt;<x:ref>artwork</x:ref>&gt; elements (<xref target="element.artwork"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="dl"/>
               <iref item="dl element" subitem="inside td"/>&lt;<x:ref>dl</x:ref>&gt; elements (<xref target="element.dl"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="figure"/>
               <iref item="figure element" subitem="inside td"/>&lt;<x:ref>figure</x:ref>&gt; elements (<xref target="element.figure"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ol"/>
               <iref item="ol element" subitem="inside td"/>&lt;<x:ref>ol</x:ref>&gt; elements (<xref target="element.ol"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sourcecode"/>
               <iref item="sourcecode element" subitem="inside td"/>&lt;<x:ref>sourcecode</x:ref>&gt; elements (<xref target="element.sourcecode"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="t"/>
               <iref item="t element" subitem="inside td"/>&lt;<x:ref>t</x:ref>&gt; elements (<xref target="element.t"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ul"/>
               <iref item="ul element" subitem="inside td"/>&lt;<x:ref>ul</x:ref>&gt; elements (<xref target="element.ul"/>)</li>
         </ul>
      </li>
   </ul>
   <t><!--AG-->Or:</t>
   <ul empty="true"><!--AG-->
      <li><!--AG-->
         <t>In any order:</t>
         <ul><!--AG-->
            <li><!--AG-->Text</li>
            <li><!--AG-->
               <iref item="Elements" subitem="bcp14"/>
               <iref item="bcp14 element" subitem="inside td"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="br"/>
               <iref item="br element" subitem="inside td"/>&lt;<x:ref>br</x:ref>&gt; elements (<xref target="element.br"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="cref"/>
               <iref item="cref element" subitem="inside td"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="em"/>
               <iref item="em element" subitem="inside td"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="eref"/>
               <iref item="eref element" subitem="inside td"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="iref"/>
               <iref item="iref element" subitem="inside td"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="relref"/>
               <iref item="relref element" subitem="inside td"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="strong"/>
               <iref item="strong element" subitem="inside td"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sub"/>
               <iref item="sub element" subitem="inside td"/>&lt;<x:ref>sub</x:ref>&gt; elements (<xref target="element.sub"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sup"/>
               <iref item="sup element" subitem="inside td"/>&lt;<x:ref>sup</x:ref>&gt; elements (<xref target="element.sup"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="tt"/>
               <iref item="tt element" subitem="inside td"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="xref"/>
               <iref item="xref element" subitem="inside td"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
         </ul>
      </li>
   </ul>

   <!--td/@align-->
   <section anchor="element.td.attribute.align" toc="exclude">
      <name>"align" Attribute</name>
      <iref item="Attributes" subitem="align"/>
      <iref item="td element" subitem="align attribute"/>
      <iref item="align attribute" subitem="in td element"/>
      <t>
         Controls whether the content of the cell appears left justified (default), centered,
         or right justified. Note that "center" or "right" will probably only work well in cells with plain text; any
         other elements might make the contents render badly.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"left" (default)</li>
         <li>"center"</li>
         <li>"right"</li>
      </ul>
   </section>

   <!--td/@anchor-->
   <section anchor="element.td.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="td element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in td element"/>
      <t>
        Document-wide unique identifier for the cell.
      </t>
   </section>

   <!--td/@colspan-->
   <section anchor="element.td.attribute.colspan" toc="exclude">
      <name>"colspan" Attribute</name>
      <iref item="Attributes" subitem="colspan"/>
      <iref item="td element" subitem="colspan attribute"/>
      <iref item="colspan attribute" subitem="in td element"/>
      <t>
         The number of columns that the cell is to span. For example, setting "colspan='3'"
         indicates that the cell occupies the same horizontal space as three cells of
         a row without any "colspan" attributes.
      </t>
   </section>

   <!--td/@rowspan-->
   <section anchor="element.td.attribute.rowspan" toc="exclude">
      <name>"rowspan" Attribute</name>
      <iref item="Attributes" subitem="rowspan"/>
      <iref item="td element" subitem="rowspan attribute"/>
      <iref item="rowspan attribute" subitem="in td element"/>
      <t>
         The number of rows that the cell is to span. For example, setting "rowspan='3'"
         indicates that the cell occupies the same vertical space as three rows.
      </t>
   </section>
</section>

<!--tfoot-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.tfoot">
   <name>
      <tt>&lt;tfoot&gt;</tt>
   </name>
   <x:anchor-alias value="tfoot"/>
   <iref item="Elements" subitem="tfoot" primary="true"/>
   <iref item="tfoot element" primary="true"/>
   <t>
      A container for a set of footer rows for a table.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>table</x:ref>&gt; (<xref target="element.table"/>).</t>
   <t anchor="element.tfoot.contents"><!--AG-->
      <xref format="none" target="grammar.tfoot">Content model</xref>:
    </t>
        
   <t><!--AG-->
      <iref item="Elements" subitem="tr"/>
      <iref item="tr element" subitem="inside tfoot"/>One or more &lt;<x:ref>tr</x:ref>&gt; elements (<xref target="element.tr"/>)</t>
      

   <!--tfoot/@anchor-->
   <section anchor="element.tfoot.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="tfoot element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in tfoot element"/>
      <t>
        Document-wide unique identifier for the tfoot.
      </t>
   </section>
</section>

<!--th-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.th">
   <name>
      <tt>&lt;th&gt;</tt>
   </name>
   <x:anchor-alias value="th"/>
   <iref item="Elements" subitem="th" primary="true"/>
   <iref item="th element" primary="true"/>
   <t>
      A cell in a table row. When rendered, this will normally come out in boldface; other than that,
      there is no difference between this and the &lt;<x:ref>td</x:ref>&gt; element.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>tr</x:ref>&gt; (<xref target="element.tr"/>).</t>
   <t anchor="element.th.contents"><!--AG-->
      <xref format="none" target="grammar.th">Content model</xref>:
    </t>
   <t><!--AG-->Either:</t>
   <ul empty="true"><!--AG-->
      <li><!--AG-->
         <t>In any order, but at least one of:</t>
         <ul><!--AG-->
            <li><!--AG-->
               <iref item="Elements" subitem="artwork"/>
               <iref item="artwork element" subitem="inside th"/>&lt;<x:ref>artwork</x:ref>&gt; elements (<xref target="element.artwork"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="dl"/>
               <iref item="dl element" subitem="inside th"/>&lt;<x:ref>dl</x:ref>&gt; elements (<xref target="element.dl"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="figure"/>
               <iref item="figure element" subitem="inside th"/>&lt;<x:ref>figure</x:ref>&gt; elements (<xref target="element.figure"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ol"/>
               <iref item="ol element" subitem="inside th"/>&lt;<x:ref>ol</x:ref>&gt; elements (<xref target="element.ol"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sourcecode"/>
               <iref item="sourcecode element" subitem="inside th"/>&lt;<x:ref>sourcecode</x:ref>&gt; elements (<xref target="element.sourcecode"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="t"/>
               <iref item="t element" subitem="inside th"/>&lt;<x:ref>t</x:ref>&gt; elements (<xref target="element.t"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="ul"/>
               <iref item="ul element" subitem="inside th"/>&lt;<x:ref>ul</x:ref>&gt; elements (<xref target="element.ul"/>)</li>
         </ul>
      </li>
   </ul>
   <t><!--AG-->Or:</t>
   <ul empty="true"><!--AG-->
      <li><!--AG-->
         <t>In any order:</t>
         <ul><!--AG-->
            <li><!--AG-->Text</li>
            <li><!--AG-->
               <iref item="Elements" subitem="bcp14"/>
               <iref item="bcp14 element" subitem="inside th"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="br"/>
               <iref item="br element" subitem="inside th"/>&lt;<x:ref>br</x:ref>&gt; elements (<xref target="element.br"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="cref"/>
               <iref item="cref element" subitem="inside th"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="em"/>
               <iref item="em element" subitem="inside th"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="eref"/>
               <iref item="eref element" subitem="inside th"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="iref"/>
               <iref item="iref element" subitem="inside th"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="relref"/>
               <iref item="relref element" subitem="inside th"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="strong"/>
               <iref item="strong element" subitem="inside th"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sub"/>
               <iref item="sub element" subitem="inside th"/>&lt;<x:ref>sub</x:ref>&gt; elements (<xref target="element.sub"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="sup"/>
               <iref item="sup element" subitem="inside th"/>&lt;<x:ref>sup</x:ref>&gt; elements (<xref target="element.sup"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="tt"/>
               <iref item="tt element" subitem="inside th"/>&lt;<x:ref>tt</x:ref>&gt; elements (<xref target="element.tt"/>)</li>
            <li><!--AG-->
               <iref item="Elements" subitem="xref"/>
               <iref item="xref element" subitem="inside th"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
         </ul>
      </li>
   </ul>

   <!--th/@align-->
   <section anchor="element.th.attribute.align" toc="exclude">
      <name>"align" Attribute</name>
      <iref item="Attributes" subitem="align"/>
      <iref item="th element" subitem="align attribute"/>
      <iref item="align attribute" subitem="in th element"/>
      <t>
         Controls whether the content of the cell appears left justified (default), centered,
         or right justified. Note that "center" or "right" will probably only work well in cells with plain text; any
         other elements might make the contents render badly.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"left" (default)</li>
         <li>"center"</li>
         <li>"right"</li>
      </ul>
   </section>

   <!--th/@anchor-->
   <section anchor="element.th.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="th element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in th element"/>
      <t>
        Document-wide unique identifier for the row.
      </t>
   </section>

   <!--th/@colspan-->
   <section anchor="element.th.attribute.colspan" toc="exclude">
      <name>"colspan" Attribute</name>
      <iref item="Attributes" subitem="colspan"/>
      <iref item="th element" subitem="colspan attribute"/>
      <iref item="colspan attribute" subitem="in th element"/>
      <t>
         The number of columns that the cell is to span. For example, setting "colspan='3'"
         indicates that the cell occupies the same horizontal space as three cells of
         a row without any "colspan" attributes.
      </t>
   </section>

   <!--th/@rowspan-->
   <section anchor="element.th.attribute.rowspan" toc="exclude">
      <name>"rowspan" Attribute</name>
      <iref item="Attributes" subitem="rowspan"/>
      <iref item="th element" subitem="rowspan attribute"/>
      <iref item="rowspan attribute" subitem="in th element"/>
      <t>
         The number of rows that the cell is to span. For example, setting "rowspan='3'"
         indicates that the cell occupies the same vertical space as three rows.
      </t>
   </section>
</section>

<!--thead-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.thead">
   <name>
      <tt>&lt;thead&gt;</tt>
   </name>
   <x:anchor-alias value="thead"/>
   <iref item="Elements" subitem="thead" primary="true"/>
   <iref item="thead element" primary="true"/>
   <t>
      A container for a set of header rows for a table.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>table</x:ref>&gt; (<xref target="element.table"/>).</t>
   <t anchor="element.thead.contents"><!--AG-->
      <xref format="none" target="grammar.thead">Content model</xref>:
    </t>
        
   <t><!--AG-->
      <iref item="Elements" subitem="tr"/>
      <iref item="tr element" subitem="inside thead"/>One or more &lt;<x:ref>tr</x:ref>&gt; elements (<xref target="element.tr"/>)</t>
      

   <!--thead/@anchor-->
   <section anchor="element.thead.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="thead element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in thead element"/>
      <t>
        Document-wide unique identifier for the thead.
      </t>
   </section>
</section>

<!--title-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.title">
   <name>
      <tt>&lt;title&gt;</tt>
   </name>
   <x:anchor-alias value="title"/>
   <iref item="Elements" subitem="title" primary="true"/>
   <iref item="title element" primary="true"/>
   <t>
      Represents the document title.
   </t>
   <t>
      When this element appears in the &lt;front&gt; element of the current document,
      the title might also appear in page headers or footers. If it is long
      (~40 characters), the "abbrev" attribute can be used to specify an
      abbreviated variant.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>front</x:ref>&gt; (<xref target="element.front"/>).</t>
   <t anchor="element.title.contents"><!--AG-->
      <xref format="none" target="grammar.title">Content model</xref>: only text content.</t>

   <!--title/@abbrev-->
   <section anchor="element.title.attribute.abbrev" toc="exclude">
      <name>"abbrev" Attribute</name>
      <iref item="Attributes" subitem="abbrev"/>
      <iref item="title element" subitem="abbrev attribute"/>
      <iref item="abbrev attribute" subitem="in title element"/>
      <t>
            Specifies an abbreviated variant of the document title.
         </t>
   </section>

   <!--title/@ascii-->
   <section anchor="element.title.attribute.ascii" toc="exclude">
      <name>"ascii" Attribute</name>
      <iref item="Attributes" subitem="ascii"/>
      <iref item="title element" subitem="ascii attribute"/>
      <iref item="ascii attribute" subitem="in title element"/>
      <t>
         The ASCII equivalent of the title.
      </t>
   </section>
</section>

<!--tr-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.tr">
   <name>
      <tt>&lt;tr&gt;</tt>
   </name>
   <x:anchor-alias value="tr"/>
   <iref item="Elements" subitem="tr" primary="true"/>
   <iref item="tr element" primary="true"/>
   <t>
      A row of a table.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>tbody</x:ref>&gt; (<xref target="element.tbody"/>), &lt;<x:ref>tfoot</x:ref>&gt; (<xref target="element.tfoot"/>), and &lt;<x:ref>thead</x:ref>&gt; (<xref target="element.thead"/>).</t>
   <t anchor="element.tr.contents"><!--AG-->
      <xref format="none" target="grammar.tr">Content model</xref>:
    </t>
   <t><!--AG-->In any order, but at least one of:</t>
   <ul><!--AG-->
      <li><!--AG-->
         <iref item="Elements" subitem="td"/>
         <iref item="td element" subitem="inside tr"/>&lt;<x:ref>td</x:ref>&gt; elements (<xref target="element.td"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="th"/>
         <iref item="th element" subitem="inside tr"/>&lt;<x:ref>th</x:ref>&gt; elements (<xref target="element.th"/>)</li>
   </ul>

   <!--tr/@anchor-->
   <section anchor="element.tr.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="tr element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in tr element"/>
      <t>
        Document-wide unique identifier for the row.
      </t>
   </section>
</section>

<!--tt-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.tt">
   <name>
      <tt>&lt;tt&gt;</tt>
   </name>
   <x:anchor-alias value="tt"/>
   <iref item="Elements" subitem="tt" primary="true"/>
   <iref item="tt element" primary="true"/>
   <t>
        Causes the text to be displayed in a constant-width font.
        This element can be combined with other character formatting elements, and the
        formatting will be additive.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>annotation</x:ref>&gt; (<xref target="element.annotation"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>cref</x:ref>&gt; (<xref target="element.cref"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>dt</x:ref>&gt; (<xref target="element.dt"/>), &lt;<x:ref>em</x:ref>&gt; (<xref target="element.em"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>name</x:ref>&gt; (<xref target="element.name"/>), &lt;<x:ref>preamble</x:ref>&gt; (<xref target="element.preamble"/>), &lt;<x:ref>refcontent</x:ref>&gt; (<xref target="element.refcontent"/>), &lt;<x:ref>strong</x:ref>&gt; (<xref target="element.strong"/>), &lt;<x:ref>sub</x:ref>&gt; (<xref target="element.sub"/>), &lt;<x:ref>sup</x:ref>&gt; (<xref target="element.sup"/>), &lt;<x:ref>t</x:ref>&gt; (<xref target="element.t"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), and &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>).</t>
   <t anchor="element.tt.contents"><!--AG-->
      <xref format="none" target="grammar.tt">Content model</xref>:
    </t>
   <t><!--AG-->In any order:</t>
   <ul><!--AG-->
      <li><!--AG-->Text</li>
      <li><!--AG-->
         <iref item="Elements" subitem="bcp14"/>
         <iref item="bcp14 element" subitem="inside tt"/>&lt;<x:ref>bcp14</x:ref>&gt; elements (<xref target="element.bcp14"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="cref"/>
         <iref item="cref element" subitem="inside tt"/>&lt;<x:ref>cref</x:ref>&gt; elements (<xref target="element.cref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="em"/>
         <iref item="em element" subitem="inside tt"/>&lt;<x:ref>em</x:ref>&gt; elements (<xref target="element.em"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="eref"/>
         <iref item="eref element" subitem="inside tt"/>&lt;<x:ref>eref</x:ref>&gt; elements (<xref target="element.eref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="iref"/>
         <iref item="iref element" subitem="inside tt"/>&lt;<x:ref>iref</x:ref>&gt; elements (<xref target="element.iref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="relref"/>
         <iref item="relref element" subitem="inside tt"/>&lt;<x:ref>relref</x:ref>&gt; elements (<xref target="element.relref"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="strong"/>
         <iref item="strong element" subitem="inside tt"/>&lt;<x:ref>strong</x:ref>&gt; elements (<xref target="element.strong"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sub"/>
         <iref item="sub element" subitem="inside tt"/>&lt;<x:ref>sub</x:ref>&gt; elements (<xref target="element.sub"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="sup"/>
         <iref item="sup element" subitem="inside tt"/>&lt;<x:ref>sup</x:ref>&gt; elements (<xref target="element.sup"/>)</li>
      <li><!--AG-->
         <iref item="Elements" subitem="xref"/>
         <iref item="xref element" subitem="inside tt"/>&lt;<x:ref>xref</x:ref>&gt; elements (<xref target="element.xref"/>)</li>
   </ul>
</section>

<!--ul-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.ul">
   <name>
      <tt>&lt;ul&gt;</tt>
   </name>
   <x:anchor-alias value="ul"/>
   <iref item="Elements" subitem="ul" primary="true"/>
   <iref item="ul element" primary="true"/>
   <t>
      An unordered list. The labels on the items will be symbols picked by the formatter.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>abstract</x:ref>&gt; (<xref target="element.abstract"/>), &lt;<x:ref>aside</x:ref>&gt; (<xref target="element.aside"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>note</x:ref>&gt; (<xref target="element.note"/>), &lt;<x:ref>section</x:ref>&gt; (<xref target="element.section"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), and &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>).</t>
   <t anchor="element.ul.contents"><!--AG-->
      <xref format="none" target="grammar.ul">Content model</xref>:
    </t>
        
   <t><!--AG-->
      <iref item="Elements" subitem="li"/>
      <iref item="li element" subitem="inside ul"/>One or more &lt;<x:ref>li</x:ref>&gt; elements (<xref target="element.li"/>)</t>
      

   <!--ul/@anchor-->
   <section anchor="element.ul.attribute.anchor" toc="exclude">
      <name>"anchor" Attribute</name>
      <iref item="Attributes" subitem="anchor"/>
      <iref item="ul element" subitem="anchor attribute"/>
      <iref item="anchor attribute" subitem="in ul element"/>
      <t>
        Document-wide unique identifier for the list.
      </t>
   </section>

   <!--ul/@empty-->
   <section anchor="element.ul.attribute.empty" toc="exclude">
      <name>"empty" Attribute</name>
      <iref item="Attributes" subitem="empty"/>
      <iref item="ul element" subitem="empty attribute"/>
      <iref item="empty attribute" subitem="in ul element"/>
      <t>
         Defines whether or not the label is empty. empty="true" indicates that no label will be shown.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"false" (default)</li>
         <li>"true"</li>
      </ul>
   </section>

   <!--ul/@spacing-->
   <section anchor="element.ul.attribute.spacing" toc="exclude">
      <name>"spacing" Attribute</name>
      <iref item="Attributes" subitem="spacing"/>
      <iref item="ul element" subitem="spacing attribute"/>
      <iref item="spacing attribute" subitem="in ul element"/>
      <t>
         Defines whether or not there is a blank line between entries. spacing="normal"
         indicates a single blank line, while spacing="compact" indicates no space between.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"normal" (default)</li>
         <li>"compact"</li>
      </ul>
   </section>
</section>

<!--uri-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.uri">
   <name>
      <tt>&lt;uri&gt;</tt>
   </name>
   <x:anchor-alias value="uri"/>
   <iref item="Elements" subitem="uri" primary="true"/>
   <iref item="uri element" primary="true"/>
   <t>
      Contains a web address associated with the author.
   </t>
   <t>
      The contents should be a valid URI; this most likely will be an "http:" or "https:" URI. 
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>address</x:ref>&gt; (<xref target="element.address"/>).</t>
   <t anchor="element.uri.contents"><!--AG-->
      <xref format="none" target="grammar.uri">Content model</xref>: only text content.</t>
</section>

<!--workgroup-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.workgroup">
   <name>
      <tt>&lt;workgroup&gt;</tt>
   </name>
   <x:anchor-alias value="workgroup"/>
   <iref item="Elements" subitem="workgroup" primary="true"/>
   <iref item="workgroup element" primary="true"/>
   <t>
      This element is used to specify the Working Group (IETF) or Research Group (IRTF) from which the document originates,
      if any. The recommended format is the official name of the Working Group
      (with some capitalization).
   </t>
   <t>
      In Internet-Drafts, this is used in the upper left corner of the boilerplate,
      replacing the "Network Working Group" string. Formatting software can
      append the words "Working Group" or "Research Group", depending on
      the "submissionType" property of the &lt;<x:ref>rfc</x:ref>&gt; element
      (<xref target="element.rfc.attribute.submissionType"/>).
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>front</x:ref>&gt; (<xref target="element.front"/>).</t>
   <t anchor="element.workgroup.contents"><!--AG-->
      <xref format="none" target="grammar.workgroup">Content model</xref>: only text content.</t>
</section>

<!--xref-->
<section xmlns:x="http://purl.org/net/xml2rfc/ext" anchor="element.xref">
   <name>
      <tt>&lt;xref&gt;</tt>
   </name>
   <x:anchor-alias value="xref"/>
   <iref item="Elements" subitem="xref" primary="true"/>
   <iref item="xref element" primary="true"/>
   <t>
      A reference to an anchor in this document.
      Formatters that have links (such as HTML and PDF) are likely to render &lt;xref&gt; elements as internal hyperlinks.
      This element is useful for referring to references in the "References" section, to specific sections of this
      document, to specific figures, and so on.
      The "target" attribute is required.
   </t>
   <t><!--AG-->This element appears as a child element of &lt;<x:ref>annotation</x:ref>&gt; (<xref target="element.annotation"/>), &lt;<x:ref>blockquote</x:ref>&gt; (<xref target="element.blockquote"/>), &lt;<x:ref>c</x:ref>&gt; (<xref target="element.c"/>), &lt;<x:ref>cref</x:ref>&gt; (<xref target="element.cref"/>), &lt;<x:ref>dd</x:ref>&gt; (<xref target="element.dd"/>), &lt;<x:ref>dt</x:ref>&gt; (<xref target="element.dt"/>), &lt;<x:ref>em</x:ref>&gt; (<xref target="element.em"/>), &lt;<x:ref>li</x:ref>&gt; (<xref target="element.li"/>), &lt;<x:ref>name</x:ref>&gt; (<xref target="element.name"/>), &lt;<x:ref>postamble</x:ref>&gt; (<xref target="element.postamble"/>), &lt;<x:ref>preamble</x:ref>&gt; (<xref target="element.preamble"/>), &lt;<x:ref>strong</x:ref>&gt; (<xref target="element.strong"/>), &lt;<x:ref>sub</x:ref>&gt; (<xref target="element.sub"/>), &lt;<x:ref>sup</x:ref>&gt; (<xref target="element.sup"/>), &lt;<x:ref>t</x:ref>&gt; (<xref target="element.t"/>), &lt;<x:ref>td</x:ref>&gt; (<xref target="element.td"/>), &lt;<x:ref>th</x:ref>&gt; (<xref target="element.th"/>), &lt;<x:ref>tt</x:ref>&gt; (<xref target="element.tt"/>), and &lt;<x:ref>ttcol</x:ref>&gt; (<xref target="element.ttcol"/>).</t>
   <t anchor="element.xref.contents"><!--AG-->
      <xref format="none" target="grammar.xref">Content model</xref>: only text content.</t>

   <!--xref/@format-->
   <section anchor="element.xref.attribute.format" toc="exclude">
      <name>"format" Attribute</name>
      <iref item="Attributes" subitem="format"/>
      <iref item="xref element" subitem="format attribute"/>
      <iref item="format attribute" subitem="in xref element"/>
      <t>
        This attribute signals to formatters what the desired format of the reference should be.
        Formatters for document types that have linking capability should wrap the displayed text in hyperlinks.
      </t>
      <t>
         <iref item="xref formats" subitem="counter" primary="true"/>
        "counter"
        <list style="empty">
            <t>
            The "derivedContent" attribute will contain just a counter.
            This is used for targets that are
            &lt;<x:ref>section</x:ref>&gt;, &lt;<x:ref>figure</x:ref>&gt;, &lt;<x:ref>table</x:ref>&gt;, or items in an ordered list.
            Using "format='counter'" where the target is any other type of element is an error.
            </t>
            <t>
            For example, with an input of:
<figure>
                  <artwork>
      &lt;section anchor="overview"&gt;Protocol Overview&lt;/section&gt;
      . . .
      See Section &lt;xref target="overview" format="counter"/&gt;
      for an overview.
</artwork>
               </figure>
            </t>
            <t>
               An HTML formatter might generate:
            </t>
            <t>
              See Section &lt;a href="#overview"&gt;1.7&lt;/a&gt; for an overview.
            </t>
         </list>
      </t>
      <t>
         <iref item="xref formats" subitem="default" primary="true"/>
        "default"
        <list style="empty">
            <t>
            If the element has no content, the "derivedContent" attribute will contain a text fragment that describes the referenced part 
            completely, such as "XML" for a target that is a &lt;<x:ref>reference</x:ref>&gt;,
            or "Section 2" or "Table 4" for a target to a non-reference.
            (If the element has content, the "derivedContent" attribute is filled with the content.)
            </t>
            <t>
            For example, with an input of:
<figure>
                  <artwork>
      &lt;section anchor="overview"&gt;Protocol Overview&lt;/section&gt;
      . . .
      See &lt;xref target="overview"/&gt; for an overview.
</artwork>
               </figure>
            </t>
            <t>
               An HTML formatter might generate:
            </t>
            <t>
              See &lt;a href="#overview"&gt;Section 1.7&lt;/a&gt; for an overview.
            </t>
         </list>
      </t>
      <t>
         <iref item="xref formats" subitem="none" primary="true"/>
        "none"
        <list style="empty">
            <t>
            Deprecated.
          </t>
         </list>
      </t>
      <t>
         <iref item="xref formats" subitem="title" primary="true"/>
        "title"
        <list style="empty">
            <t>
            If the target is a &lt;<x:ref>reference</x:ref>&gt; element, the "derivedContent" attribute will contain the name of
            the reference, extracted from the &lt;<x:ref>title</x:ref>&gt; child of the
            &lt;<x:ref>front</x:ref>&gt; child of the reference.
            Or, if the target element has a &lt;<x:ref>name</x:ref>&gt; child element, the "derivedContent" attribute will contain the
            text content of that &lt;<x:ref>name</x:ref>&gt; element concatenated with the text content of
            each descendant node of &lt;<x:ref>name</x:ref>&gt; (that is, stripping out all of the
            XML markup, leaving only the text).
            Or, if the target element does not contain a &lt;<x:ref>name</x:ref>&gt; child element,
            the "derivedContent" attribute will contain the name of the "anchor" attribute of that element
            with no other adornment.
          </t>
         </list>
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"default" (default)</li>
         <li>"title"</li>
         <li>"counter"</li>
         <li>"none"</li>
      </ul>
   </section>

   <!--xref/@pageno-->
   <section anchor="element.xref.attribute.pageno" toc="exclude">
      <name>"pageno" Attribute</name>
      <iref item="Attributes" subitem="pageno"/>
      <iref item="xref element" subitem="pageno attribute"/>
      <iref item="pageno attribute" subitem="in xref element"/>
      <t>
            Deprecated.
      </t>
      <t><!--AG-->Allowed values:</t>
      <ul><!--AG-->
         <li>"true"</li>
         <li>"false" (default)</li>
      </ul>
   </section>

   <!--xref/@target-->
   <section anchor="element.xref.attribute.target" toc="exclude">
      <name>"target" Attribute <em> (Mandatory)</em>
      </name>
      <iref item="Attributes" subitem="target"/>
      <iref item="xref element" subitem="target attribute"/>
      <iref item="target attribute" subitem="in xref element"/>
      <t>
        Identifies the document component being referenced.
        The value needs to match the value of the "anchor" attribute of an
        element in the document; otherwise, it is an error.
      </t>
   </section>
</section>